{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0","program":"/home/rajkishor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","supercow","/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=5235dc1202af0f95","-C","extra-filename=-5235dc1202af0f95","--out-dir","/home/rajkishor/Desktop/RUST/target/rls/debug/deps","-L","dependency=/home/rajkishor/Desktop/RUST/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/rajkishor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rajkishor/Desktop/RUST/target/rls/debug/deps/libsupercow-5235dc1202af0f95.rmeta"},"prelude":{"crate_id":{"name":"supercow","disambiguator":[1209644245537892269,10127422879056612801]},"crate_root":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src","external_crates":[{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}}],"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":335,"byte_end":90361,"line_start":9,"line_end":2526,"column_start":1,"column_end":65}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":335,"byte_end":90361,"line_start":9,"line_end":2526,"column_start":1,"column_end":65},"name":"","qualname":"::","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":211},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":432},{"krate":0,"index":440},{"krate":0,"index":447},{"krate":0,"index":454},{"krate":0,"index":480},{"krate":0,"index":243},{"krate":0,"index":248},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":489},{"krate":0,"index":498},{"krate":0,"index":506},{"krate":0,"index":514},{"krate":0,"index":522},{"krate":0,"index":530},{"krate":0,"index":261},{"krate":0,"index":267},{"krate":0,"index":273},{"krate":0,"index":538},{"krate":0,"index":546},{"krate":0,"index":554},{"krate":0,"index":562},{"krate":0,"index":570},{"krate":0,"index":578},{"krate":0,"index":586},{"krate":0,"index":594},{"krate":0,"index":274},{"krate":0,"index":281},{"krate":0,"index":602},{"krate":0,"index":612},{"krate":0,"index":619},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310}],"decl_id":null,"docs":" `Supercow` is `Cow` on steroids.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":335,"byte_end":357,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":341},{"krate":0,"index":353},{"krate":0,"index":350},{"krate":0,"index":346},{"krate":0,"index":357},{"krate":0,"index":375},{"krate":0,"index":372},{"krate":0,"index":368},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":126},{"krate":0,"index":379},{"krate":0,"index":386},{"krate":0,"index":384},{"krate":0,"index":383},{"krate":0,"index":381},{"krate":0,"index":129},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165}],"decl_id":null,"docs":" Miscellaneous things used to integrate other code with Supercow, but which\n are not of interest to most client developers.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91597,"byte_end":91607,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"name":"ConstDeref","qualname":"::ext::ConstDeref","value":"ConstDeref","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Marker trait indicating a `Deref`-like which always returns the same\n reference.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91664,"byte_end":91670,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"name":"Target","qualname":"::ext::ConstDeref::Target","value":"type Target : ?Sized;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" The type this value dereferences to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91758,"byte_end":91769,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"const_deref","qualname":"::ext::ConstDeref::const_deref","value":"fn (&self) -> &Self::Target","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":" Returns the (constant) value that this value dereferences to.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":92721,"byte_end":92734,"line_start":69,"line_end":69,"column_start":11,"column_end":24},"name":"TwoStepShared","qualname":"::ext::TwoStepShared","value":"TwoStepShared<OWNED, BORROWED: ?Sized>","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Trait for `ConstDeref` implementations which can be constructed in a\n two-step process.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":92819,"byte_end":92831,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"new_two_step","qualname":"::ext::TwoStepShared::new_two_step","value":"fn () -> Self","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns a new, empty instance of `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":93274,"byte_end":93286,"line_start":82,"line_end":82,"column_start":15,"column_end":27},"name":"deref_holder","qualname":"::ext::TwoStepShared::deref_holder","value":"fn (&mut self) -> &mut Option<OWNED>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the internal `Option<T>` backing this value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":94116,"byte_end":94125,"line_start":106,"line_end":106,"column_start":17,"column_end":26},"name":"TwoStepRc","qualname":"::ext::TwoStepRc","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper providing a `TwoStepShared` implementation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":94148,"byte_end":94158,"line_start":107,"line_end":107,"column_start":17,"column_end":27},"name":"TwoStepArc","qualname":"::ext::TwoStepArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper providing a `TwoStepShared` implementation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":44},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":94425,"byte_end":94457,"line_start":114,"line_end":114,"column_start":11,"column_end":43},"name":"MAX_INTERNAL_BORROW_DISPLACEMENT","qualname":"::ext::MAX_INTERNAL_BORROW_DISPLACEMENT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum displacement (relative to the start of the object) that a\n reference pointing into `self` from an instance of `SafeBorrow` may have.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":94782,"byte_end":94792,"line_start":123,"line_end":123,"column_start":18,"column_end":28},"name":"SafeBorrow","qualname":"::ext::SafeBorrow","value":"SafeBorrow<T: ?Sized>: Borrow<T>","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" Extension of `Borrow` used to allow `Supercow::to_mut()` to work safely.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95422,"byte_end":95440,"line_start":136,"line_end":136,"column_start":8,"column_end":26},"name":"borrow_replacement","qualname":"::ext::SafeBorrow::borrow_replacement","value":"fn <'a> (ptr: &'a T) -> &'a T","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Given `ptr`, which was obtained from a prior call to `Self::borrow()`,\n return a value with the same nominal lifetime which is guaranteed to\n survive mutations to `Self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97071,"byte_end":97086,"line_start":186,"line_end":186,"column_start":18,"column_end":33},"name":"PointerFirstRef","qualname":"::ext::PointerFirstRef","value":"PointerFirstRef: Copy","parent":null,"children":[],"decl_id":null,"docs":" Marker trait identifying a pointer type which begins with an absolute\n address and contains no other address-dependent information.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97706,"byte_end":97716,"line_start":202,"line_end":202,"column_start":18,"column_end":28},"name":"SharedFrom","qualname":"::ext::SharedFrom","value":"SharedFrom<T>","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Like `std::convert::From`, but without the blanket implementations that\n cause problems for `supercow_features!`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97771,"byte_end":97782,"line_start":204,"line_end":204,"column_start":8,"column_end":19},"name":"shared_from","qualname":"::ext::SharedFrom::shared_from","value":"fn (t: T) -> Self","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Converts the given `T` to `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":86},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":98363,"byte_end":98375,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"name":"OwnedStorage","qualname":"::ext::OwnedStorage","value":"OwnedStorage<A, B>: Default","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" Describes how an `OWNED` or `SHARED` value is stored in a `Supercow`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99028,"byte_end":99038,"line_start":242,"line_end":242,"column_start":8,"column_end":18},"name":"allocate_a","qualname":"::ext::OwnedStorage::allocate_a","value":"fn (&mut self, value: A) -> *mut ()","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Allocates the given owned value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99105,"byte_end":99115,"line_start":244,"line_end":244,"column_start":8,"column_end":18},"name":"allocate_b","qualname":"::ext::OwnedStorage::allocate_b","value":"fn (&mut self, value: B) -> *mut ()","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" See `allocate_a`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99458,"byte_end":99467,"line_start":252,"line_end":252,"column_start":15,"column_end":24},"name":"get_ptr_a","qualname":"::ext::OwnedStorage::get_ptr_a","value":"fn <'a> (&'a self, ptr: *mut ()) -> &'a A","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Extracts the immutable reference from the saved pointer and storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99545,"byte_end":99554,"line_start":254,"line_end":254,"column_start":15,"column_end":24},"name":"get_ptr_b","qualname":"::ext::OwnedStorage::get_ptr_b","value":"fn <'a> (&'a self, ptr: *mut ()) -> &'a B","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" See `get_ptr_a`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99899,"byte_end":99908,"line_start":262,"line_end":262,"column_start":15,"column_end":24},"name":"get_mut_a","qualname":"::ext::OwnedStorage::get_mut_a","value":"fn <'a> (&'a mut self, ptr: *mut ()) -> &'a mut A","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Extracts the mutable reference from the saved pointer and storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":99994,"byte_end":100003,"line_start":264,"line_end":264,"column_start":15,"column_end":24},"name":"get_mut_b","qualname":"::ext::OwnedStorage::get_mut_b","value":"fn <'a> (&'a mut self, ptr: *mut ()) -> &'a mut B","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" See `get_mut_a`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":100521,"byte_end":100533,"line_start":277,"line_end":277,"column_start":15,"column_end":27},"name":"deallocate_a","qualname":"::ext::OwnedStorage::deallocate_a","value":"fn (&mut self, ptr: *mut ()) -> ()","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Releases any allocations that would not be released by `Stored`\n being dropped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":100602,"byte_end":100614,"line_start":279,"line_end":279,"column_start":15,"column_end":27},"name":"deallocate_b","qualname":"::ext::OwnedStorage::deallocate_b","value":"fn (&mut self, ptr: *mut ()) -> ()","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" See `deallocate_b`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":100719,"byte_end":100736,"line_start":281,"line_end":281,"column_start":15,"column_end":32},"name":"deallocate_into_a","qualname":"::ext::OwnedStorage::deallocate_into_a","value":"fn (&mut self, ptr: *mut ()) -> A","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Like `deallocate_a()`, but also return the owned value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":100815,"byte_end":100832,"line_start":283,"line_end":283,"column_start":15,"column_end":32},"name":"deallocate_into_b","qualname":"::ext::OwnedStorage::deallocate_into_b","value":"fn (&mut self, ptr: *mut ()) -> B","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" See `deallocate_into_a`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101156,"byte_end":101175,"line_start":292,"line_end":292,"column_start":8,"column_end":27},"name":"is_internal_storage","qualname":"::ext::OwnedStorage::is_internal_storage","value":"fn () -> bool","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Returns whether this storage implementation ever causes the owned\n object to be stored internally to the `Supercow`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101486,"byte_end":101499,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"InlineStorage","qualname":"::ext::InlineStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Causes the `OWNED` or `SHARED` value of a `Supercow` to be stored inline.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101475,"byte_end":101531,"line_start":301,"line_end":301,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":104177,"byte_end":104189,"line_start":401,"line_end":401,"column_start":12,"column_end":24},"name":"BoxedStorage","qualname":"::ext::BoxedStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Causes the `OWNED` or `SHARED` value of a `Supercow` to be stored in a\n `Box`.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":104166,"byte_end":104190,"line_start":401,"line_end":401,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":106740,"byte_end":106748,"line_start":491,"line_end":491,"column_start":18,"column_end":26},"name":"PtrWrite","qualname":"::ext::PtrWrite","value":"PtrWrite<T: ?Sized>: Copy","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" Optionally stores a pointer to a value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":106841,"byte_end":106844,"line_start":493,"line_end":493,"column_start":8,"column_end":11},"name":"new","qualname":"::ext::PtrWrite::new","value":"fn () -> Self","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Returns an instance of `Self` with no particular value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":107043,"byte_end":107052,"line_start":501,"line_end":501,"column_start":8,"column_end":17},"name":"store_ptr","qualname":"::ext::PtrWrite::store_ptr","value":"fn (&mut self, t: *const T) -> ()","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Writes the given pointer into `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":159},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":107544,"byte_end":107551,"line_start":525,"line_end":525,"column_start":18,"column_end":25},"name":"PtrRead","qualname":"::ext::PtrRead","value":"PtrRead<T: ?Sized>: PtrWrite<T>","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Read trait corresponding to `PtrWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":107867,"byte_end":107874,"line_start":533,"line_end":533,"column_start":8,"column_end":15},"name":"get_ptr","qualname":"::ext::PtrRead::get_ptr","value":"fn (&self) -> *const T","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" Returns the pointer most recently stored via `store_ptr()`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":108407,"byte_end":108416,"line_start":551,"line_end":551,"column_start":11,"column_end":20},"name":"RefParent","qualname":"::ext::RefParent","value":"RefParent","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":108359,"byte_end":108381,"line_start":549,"line_end":549,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":166},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":108428,"byte_end":108433,"line_start":552,"line_end":552,"column_start":10,"column_end":15},"name":"Owned","qualname":"::ext::RefParent::Owned","value":"type Owned : ?Sized;","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":108727,"byte_end":108744,"line_start":562,"line_end":562,"column_start":15,"column_end":32},"name":"supercow_ref_drop","qualname":"::ext::RefParent::supercow_ref_drop","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Notifies `self` that a `Ref` has been dropped.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":388},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":35270,"byte_end":35285,"line_start":958,"line_end":958,"column_start":15,"column_end":30},"name":"DefaultFeatures","qualname":"::DefaultFeatures","value":"DefaultFeatures<'a>: Send + Sync + 'a","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" The default shared reference type for `Supercow`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":410},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":35557,"byte_end":35572,"line_start":964,"line_end":964,"column_start":15,"column_end":30},"name":"NonSyncFeatures","qualname":"::NonSyncFeatures","value":"NonSyncFeatures<'a>: 'a","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":" The shared reference type for `NonSyncSupercow`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":185},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":36191,"byte_end":36206,"line_start":983,"line_end":983,"column_start":10,"column_end":25},"name":"NonSyncSupercow","qualname":"::NonSyncSupercow","value":"Supercow<'a, OWNED, BORROWED, Box<NonSyncFeatures<'static> + 'static>,\n         BoxedStorage>","parent":null,"children":[],"decl_id":null,"docs":" `Supercow` with the default `SHARED` changed to `NonSyncFeatures`, enabling\n the use of `Rc` as a shared reference type as well as making it possible to\n use non-`Send` or non-`Sync` `BORROWED` types easily.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":36735,"byte_end":36749,"line_start":994,"line_end":994,"column_start":10,"column_end":24},"name":"InlineSupercow","qualname":"::InlineSupercow","value":"Supercow<'a, OWNED, BORROWED, SHARED, InlineStorage<OWNED, SHARED>>","parent":null,"children":[],"decl_id":null,"docs":" `Supercow` with the default `STORAGE` changed to `InlineStorage`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":194},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":37087,"byte_end":37108,"line_start":1001,"line_end":1001,"column_start":10,"column_end":31},"name":"InlineNonSyncSupercow","qualname":"::InlineNonSyncSupercow","value":"Supercow<'a, OWNED, BORROWED, Box<NonSyncFeatures<'static> + 'static>,\n         InlineStorage<OWNED, Box<NonSyncFeatures<'static> + 'static>>>","parent":null,"children":[],"decl_id":null,"docs":" `NonSyncSupercow` with the `STORAGE` changed to `InlineStorage`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":198},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":37861,"byte_end":37869,"line_start":1021,"line_end":1021,"column_start":12,"column_end":20},"name":"Supercow","qualname":"::Supercow","value":"Supercow {  }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" The actual generic reference type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":211},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":41870,"byte_end":41880,"line_start":1101,"line_end":1101,"column_start":10,"column_end":20},"name":"Phantomcow","qualname":"::Phantomcow","value":"Supercow<'a, OWNED, BORROWED, SHARED, STORAGE, ()>","parent":null,"children":[],"decl_id":null,"docs":" `Phantomcow<'a, Type>` is to `Supercow<'a, Type>` as\n `PhantomData<&'a Type>` is to `&'a Type`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":217},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":42157,"byte_end":42174,"line_start":1107,"line_end":1107,"column_start":10,"column_end":27},"name":"NonSyncPhantomcow","qualname":"::NonSyncPhantomcow","value":"Phantomcow<'a, OWNED, BORROWED, Box<NonSyncFeatures<'static> + 'static>,\n           BoxedStorage>","parent":null,"children":[],"decl_id":null,"docs":" The `Phantomcow` variant corresponding to `NonSyncSupercow`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":221},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":42386,"byte_end":42402,"line_start":1112,"line_end":1112,"column_start":10,"column_end":26},"name":"InlinePhantomcow","qualname":"::InlinePhantomcow","value":"Phantomcow<'a, OWNED, BORROWED, SHARED, InlineStorage<OWNED, SHARED>>","parent":null,"children":[],"decl_id":null,"docs":" The `Phantomcow` variant corresponding to `InlineStorage`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":226},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":42666,"byte_end":42689,"line_start":1117,"line_end":1117,"column_start":10,"column_end":33},"name":"InlineNonSyncPhantomcow","qualname":"::InlineNonSyncPhantomcow","value":"Phantomcow<'a, OWNED, BORROWED, Box<NonSyncFeatures<'static> + 'static>,\n           InlineStorage<OWNED, Box<NonSyncFeatures<'static> + 'static>>>","parent":null,"children":[],"decl_id":null,"docs":" The `Phantomcow` variant corresponding to `InlineNonSyncSupercow`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":44489,"byte_end":44494,"line_start":1184,"line_end":1184,"column_start":12,"column_end":17},"name":"owned","qualname":"<Supercow>::owned","value":"fn (inner: OWNED) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Supercow` which owns the given value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":45307,"byte_end":45315,"line_start":1202,"line_end":1202,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<Supercow>::borrowed","value":"fn <T> (inner: &'a T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Supercow` which borrows the given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":45898,"byte_end":45904,"line_start":1215,"line_end":1215,"column_start":12,"column_end":18},"name":"shared","qualname":"<Supercow>::shared","value":"fn <T> (inner: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Supercow` using the given shared reference.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":47311,"byte_end":47326,"line_start":1253,"line_end":1253,"column_start":12,"column_end":27},"name":"clone_non_owned","qualname":"<Supercow>::clone_non_owned","value":"fn (this: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" If `this` is non-owned, clone `this` and return it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":48553,"byte_end":48558,"line_start":1293,"line_end":1293,"column_start":12,"column_end":17},"name":"share","qualname":"<Supercow>::share","value":"fn (this: &mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Logically clone `this` without needing to clone `OWNED`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":55441,"byte_end":55452,"line_start":1440,"line_end":1440,"column_start":12,"column_end":23},"name":"extract_ref","qualname":"<Supercow>::extract_ref","value":"fn (this: &Self) -> Option<&'a BORROWED>","parent":null,"children":[],"decl_id":null,"docs":" If `this` is borrowed, return the underlying reference with the\n original lifetime. Otherwise, return `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":55918,"byte_end":55928,"line_start":1452,"line_end":1452,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Supercow>::into_inner","value":"fn (mut this: Self) -> OWNED","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the underling value if needed, then returns it,\n consuming `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":56827,"byte_end":56833,"line_start":1476,"line_end":1476,"column_start":12,"column_end":18},"name":"to_mut","qualname":"<Supercow>::to_mut","value":"fn <'b> (&'b mut self) -> Ref<'b, Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a (indirect) mutable reference to an underlying owned value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":58666,"byte_end":58674,"line_start":1525,"line_end":1525,"column_start":12,"column_end":20},"name":"unborrow","qualname":"<Supercow>::unborrow","value":"fn (mut this: Self) -> Supercow<'static, OWNED, BORROWED, SHARED, STORAGE, PTR>","parent":null,"children":[],"decl_id":null,"docs":" If `this` is borrowed, clone the inner value so that the new `Supercow`\n has a `'static` lifetime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":60357,"byte_end":60371,"line_start":1571,"line_end":1571,"column_start":12,"column_end":26},"name":"take_ownership","qualname":"<Supercow>::take_ownership","value":"fn <NS> (mut this: Self) -> Supercow<'static, OWNED, BORROWED, NS, STORAGE, PTR>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the underlying value, so that this `Supercow` has a\n `'static` lifetime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":61479,"byte_end":61486,"line_start":1599,"line_end":1599,"column_start":12,"column_end":19},"name":"phantom","qualname":"<Supercow>::phantom","value":"fn (mut this: Self) -> Phantomcow<'a, OWNED, BORROWED, SHARED, STORAGE>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `Supercow` into a `Phantomcow`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66262,"byte_end":66265,"line_start":1715,"line_end":1715,"column_start":12,"column_end":15},"name":"Ref","qualname":"::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Provides mutable access to an owned value within a `Supercow`.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91837,"byte_end":91839,"line_start":41,"line_end":41,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91949,"byte_end":91952,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":92075,"byte_end":92078,"line_start":51,"line_end":51,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95511,"byte_end":95512,"line_start":138,"line_end":138,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95604,"byte_end":95605,"line_start":141,"line_end":141,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95730,"byte_end":95731,"line_start":146,"line_end":146,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95844,"byte_end":95845,"line_start":149,"line_end":149,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95990,"byte_end":95991,"line_start":155,"line_end":155,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":96134,"byte_end":96135,"line_start":161,"line_end":161,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97838,"byte_end":97840,"line_start":206,"line_end":206,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97931,"byte_end":97934,"line_start":209,"line_end":209,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101650,"byte_end":101663,"line_start":310,"line_end":310,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101796,"byte_end":101809,"line_start":316,"line_end":316,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":104232,"byte_end":104244,"line_start":402,"line_end":402,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":42959,"byte_end":42971,"line_start":1127,"line_end":1127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66507,"byte_end":66510,"line_start":1724,"line_end":1724,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66759,"byte_end":66762,"line_start":1735,"line_end":1735,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66919,"byte_end":66922,"line_start":1743,"line_end":1743,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":70408,"byte_end":70416,"line_start":1854,"line_end":1854,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":70716,"byte_end":70724,"line_start":1864,"line_end":1864,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":71476,"byte_end":71484,"line_start":1895,"line_end":1895,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":71804,"byte_end":71812,"line_start":1905,"line_end":1905,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":76294,"byte_end":76295,"line_start":2068,"line_end":2068,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":26764,"byte_end":26767,"line_start":743,"line_end":743,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":12}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91837,"byte_end":91839,"line_start":41,"line_end":41,"column_start":40,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":91949,"byte_end":91952,"line_start":46,"line_end":46,"column_start":40,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":92075,"byte_end":92078,"line_start":51,"line_end":51,"column_start":53,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":75},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":94806,"byte_end":94812,"line_start":123,"line_end":123,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2160},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95511,"byte_end":95512,"line_start":138,"line_end":138,"column_start":43,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":50},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95604,"byte_end":95605,"line_start":141,"line_end":141,"column_start":39,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":54},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95730,"byte_end":95731,"line_start":146,"line_end":146,"column_start":36,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95844,"byte_end":95845,"line_start":149,"line_end":149,"column_start":37,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":95990,"byte_end":95991,"line_start":155,"line_end":155,"column_start":38,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":63},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":96134,"byte_end":96135,"line_start":161,"line_end":161,"column_start":37,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97089,"byte_end":97093,"line_start":186,"line_end":186,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1445},"to":{"krate":0,"index":68}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97838,"byte_end":97840,"line_start":206,"line_end":206,"column_start":39,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":97931,"byte_end":97934,"line_start":209,"line_end":209,"column_start":40,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":98384,"byte_end":98391,"line_start":224,"line_end":224,"column_start":39,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2080},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101650,"byte_end":101663,"line_start":310,"line_end":310,"column_start":24,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":101796,"byte_end":101809,"line_start":316,"line_end":316,"column_start":42,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":341},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":104232,"byte_end":104244,"line_start":402,"line_end":402,"column_start":42,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":86}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":106763,"byte_end":106767,"line_start":491,"line_end":491,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1445},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/ext.rs","byte_start":107566,"byte_end":107574,"line_start":525,"line_end":525,"column_start":40,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":147},"to":{"krate":0,"index":159}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":35321,"byte_end":35325,"line_start":958,"line_end":958,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":35327,"byte_end":35331,"line_start":958,"line_end":958,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":2,"index":1446},"to":{"krate":0,"index":388}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":42959,"byte_end":42971,"line_start":1127,"line_end":1127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66507,"byte_end":66510,"line_start":1724,"line_end":1724,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66759,"byte_end":66762,"line_start":1735,"line_end":1735,"column_start":26,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":66919,"byte_end":66922,"line_start":1743,"line_end":1743,"column_start":22,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":70408,"byte_end":70416,"line_start":1854,"line_end":1854,"column_start":5,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":70716,"byte_end":70724,"line_start":1864,"line_end":1864,"column_start":5,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":71476,"byte_end":71484,"line_start":1895,"line_end":1895,"column_start":16,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":71804,"byte_end":71812,"line_start":1905,"line_end":1905,"column_start":16,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":73802,"byte_end":73806,"line_start":1993,"line_end":1993,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1445},"to":{"krate":0,"index":298}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/supercow-0.1.0/src/lib.rs","byte_start":76294,"byte_end":76295,"line_start":2068,"line_end":2068,"column_start":45,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":307},"to":{"krate":0,"index":298}}]}