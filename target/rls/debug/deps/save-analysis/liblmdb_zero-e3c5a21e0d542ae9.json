{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4","program":"/home/rajkishor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lmdb_zero","/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e3c5a21e0d542ae9","-C","extra-filename=-e3c5a21e0d542ae9","--out-dir","/home/rajkishor/Desktop/RUST/target/rls/debug/deps","-L","dependency=/home/rajkishor/Desktop/RUST/target/rls/debug/deps","--extern","bitflags=/home/rajkishor/Desktop/RUST/target/rls/debug/deps/libbitflags-d0e4df6196acccd3.rmeta","--extern","libc=/home/rajkishor/Desktop/RUST/target/rls/debug/deps/liblibc-c765a8026a34493f.rmeta","--extern","liblmdb_sys=/home/rajkishor/Desktop/RUST/target/rls/debug/deps/libliblmdb_sys-ccebb46fd7da80a1.rmeta","--extern","supercow=/home/rajkishor/Desktop/RUST/target/rls/debug/deps/libsupercow-5235dc1202af0f95.rmeta","--cap-lints","allow","-L","native=/home/rajkishor/Desktop/RUST/target/rls/debug/build/liblmdb-sys-56e522e0950aba38/out","--error-format=json","--sysroot","/home/rajkishor/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rajkishor/Desktop/RUST/target/rls/debug/deps/liblmdb_zero-e3c5a21e0d542ae9.rmeta"},"prelude":{"crate_id":{"name":"lmdb_zero","disambiguator":[10211733071056916219,10193839514506556829]},"crate_root":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src","external_crates":[{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":15,"id":{"name":"liblmdb_sys","disambiguator":[15711474952672565524,1335439530491027319]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[2833080508231314648,3866321115347186557]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":17,"id":{"name":"supercow","disambiguator":[1209644245537892269,10127422879056612801]}},{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[11446112965475609042,7300697136826161689]}}],"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":370,"byte_end":15327,"line_start":10,"line_end":349,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":24},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13624,"byte_end":13634,"line_start":282,"line_end":282,"column_start":14,"column_end":24},"alias_span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13638,"byte_end":13646,"line_start":282,"line_end":282,"column_start":28,"column_end":36},"name":"FileMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":25},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13661,"byte_end":13677,"line_start":283,"line_end":283,"column_start":14,"column_end":30},"alias_span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13681,"byte_end":13683,"line_start":283,"line_end":283,"column_start":34,"column_end":36},"name":"Fd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":810},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14812,"byte_end":14817,"line_start":327,"line_end":327,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14819,"byte_end":14832,"line_start":327,"line_end":327,"column_start":24,"column_end":37},"alias_span":null,"name":"LmdbResultExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14834,"byte_end":14840,"line_start":327,"line_end":327,"column_start":39,"column_end":45},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14867,"byte_end":14871,"line_start":330,"line_end":330,"column_start":15,"column_end":19},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14873,"byte_end":14877,"line_start":330,"line_end":330,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14879,"byte_end":14889,"line_start":330,"line_end":330,"column_start":27,"column_end":37},"alias_span":null,"name":"EnvBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14891,"byte_end":14902,"line_start":330,"line_end":330,"column_start":39,"column_end":50},"alias_span":null,"name":"Environment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1066},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14904,"byte_end":14908,"line_start":330,"line_end":330,"column_start":52,"column_end":56},"alias_span":null,"name":"Stat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14910,"byte_end":14917,"line_start":330,"line_end":330,"column_start":58,"column_end":65},"alias_span":null,"name":"EnvInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14944,"byte_end":14946,"line_start":333,"line_end":333,"column_start":15,"column_end":17},"alias_span":null,"name":"db","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14948,"byte_end":14956,"line_start":333,"line_end":333,"column_start":19,"column_end":27},"alias_span":null,"name":"Database","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14958,"byte_end":14973,"line_start":333,"line_end":333,"column_start":29,"column_end":44},"alias_span":null,"name":"DatabaseOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93465,"byte_end":93469,"line_start":32,"line_end":32,"column_start":17,"column_end":21},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93471,"byte_end":93484,"line_start":32,"line_end":32,"column_start":23,"column_end":36},"alias_span":null,"name":"LmdbResultExt","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15028,"byte_end":15037,"line_start":337,"line_end":337,"column_start":21,"column_end":30},"alias_span":null,"name":"Unaligned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15039,"byte_end":15048,"line_start":337,"line_end":337,"column_start":32,"column_end":41},"alias_span":null,"name":"unaligned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15073,"byte_end":15089,"line_start":340,"line_end":340,"column_start":14,"column_end":30},"alias_span":null,"name":"ConstTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1836},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15091,"byte_end":15106,"line_start":340,"line_end":340,"column_start":32,"column_end":47},"alias_span":null,"name":"ReadTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1843},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15108,"byte_end":15124,"line_start":340,"line_end":340,"column_start":49,"column_end":65},"alias_span":null,"name":"WriteTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15139,"byte_end":15155,"line_start":341,"line_end":341,"column_start":13,"column_end":29},"alias_span":null,"name":"ResetTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15170,"byte_end":15183,"line_start":342,"line_end":342,"column_start":14,"column_end":27},"alias_span":null,"name":"ConstAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1864},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15185,"byte_end":15198,"line_start":342,"line_end":342,"column_start":29,"column_end":42},"alias_span":null,"name":"WriteAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15214,"byte_end":15217,"line_start":343,"line_end":343,"column_start":14,"column_end":17},"alias_span":null,"name":"put","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15219,"byte_end":15222,"line_start":343,"line_end":343,"column_start":19,"column_end":22},"alias_span":null,"name":"del","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1887},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15255,"byte_end":15266,"line_start":346,"line_end":346,"column_start":18,"column_end":29},"alias_span":null,"name":"StaleCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1877},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15268,"byte_end":15274,"line_start":346,"line_end":346,"column_start":31,"column_end":37},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15303,"byte_end":15313,"line_start":349,"line_end":349,"column_start":16,"column_end":26},"alias_span":null,"name":"CursorIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":15315,"byte_end":15325,"line_start":349,"line_end":349,"column_start":28,"column_end":38},"alias_span":null,"name":"MaybeOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":370,"byte_end":15327,"line_start":10,"line_end":349,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":50},{"krate":0,"index":63},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":179},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":436},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":807}],"decl_id":null,"docs":" Near-zero-cost, mostly-safe idiomatic bindings to LMDB.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13419,"byte_end":13441,"line_start":272,"line_end":272,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":13899,"byte_end":13910,"line_start":295,"line_end":295,"column_start":8,"column_end":19},"name":"version_str","qualname":"::version_str","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the LMDB version as a string.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14244,"byte_end":14251,"line_start":306,"line_end":306,"column_start":8,"column_end":15},"name":"version","qualname":"::version","value":"fn () -> (i32, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the LMDB version as (major, minor, revision).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14716,"byte_end":14722,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"Ignore","qualname":"::Ignore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty type used to indicate \"don't care\" when reading values from LMDB.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":810},{"krate":0,"index":833},{"krate":0,"index":830},{"krate":0,"index":828},{"krate":0,"index":825},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":109}],"decl_id":null,"docs":" Error values and types returned by LMDB and this wrapper.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18413,"byte_end":18421,"line_start":21,"line_end":21,"column_start":11,"column_end":19},"name":"KEYEXIST","qualname":"::error::KEYEXIST","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" key/data pair already exists\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18494,"byte_end":18502,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"NOTFOUND","qualname":"::error::NOTFOUND","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" key/data pair not found (EOF)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18606,"byte_end":18619,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"PAGE_NOTFOUND","qualname":"::error::PAGE_NOTFOUND","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Requested page not found - this usually indicates corruption\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18695,"byte_end":18704,"line_start":27,"line_end":27,"column_start":11,"column_end":20},"name":"CORRUPTED","qualname":"::error::CORRUPTED","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Located page was wrong type\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":77},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18806,"byte_end":18811,"line_start":29,"line_end":29,"column_start":11,"column_end":16},"name":"PANIC","qualname":"::error::PANIC","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Update of meta page failed or environment had fatal error\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":78},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18880,"byte_end":18896,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"VERSION_MISMATCH","qualname":"::error::VERSION_MISMATCH","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Environment version mismatch\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":79},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":18977,"byte_end":18984,"line_start":33,"line_end":33,"column_start":11,"column_end":18},"name":"INVALID","qualname":"::error::INVALID","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" File is not a valid LMDB file\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":80},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19054,"byte_end":19062,"line_start":35,"line_end":35,"column_start":11,"column_end":19},"name":"MAP_FULL","qualname":"::error::MAP_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Environment mapsize reached\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":81},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19132,"byte_end":19140,"line_start":37,"line_end":37,"column_start":11,"column_end":19},"name":"DBS_FULL","qualname":"::error::DBS_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Environment maxdbs reached\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":82},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19214,"byte_end":19226,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"READERS_FULL","qualname":"::error::READERS_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Environment maxreaders reached\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":83},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19313,"byte_end":19321,"line_start":41,"line_end":41,"column_start":11,"column_end":19},"name":"TLS_FULL","qualname":"::error::TLS_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Too many TLS keys in use - Windows only\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":84},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19393,"byte_end":19401,"line_start":43,"line_end":43,"column_start":11,"column_end":19},"name":"TXN_FULL","qualname":"::error::TXN_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Txn has too many dirty pages\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":85},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19483,"byte_end":19494,"line_start":45,"line_end":45,"column_start":11,"column_end":22},"name":"CURSOR_FULL","qualname":"::error::CURSOR_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Cursor stack too deep - internal error\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":86},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19583,"byte_end":19592,"line_start":47,"line_end":47,"column_start":11,"column_end":20},"name":"PAGE_FULL","qualname":"::error::PAGE_FULL","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Page has not enough space - internal error\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":87},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":19686,"byte_end":19697,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"MAP_RESIZED","qualname":"::error::MAP_RESIZED","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Database contents grew beyond environment mapsize\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":88},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20079,"byte_end":20091,"line_start":56,"line_end":56,"column_start":11,"column_end":23},"name":"INCOMPATIBLE","qualname":"::error::INCOMPATIBLE","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Operation and DB incompatible, or DB type changed. This can mean:","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20177,"byte_end":20186,"line_start":58,"line_end":58,"column_start":11,"column_end":20},"name":"BAD_RSLOT","qualname":"::error::BAD_RSLOT","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Invalid reuse of reader locktable slot\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":90},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20281,"byte_end":20288,"line_start":60,"line_end":60,"column_start":11,"column_end":18},"name":"BAD_TXN","qualname":"::error::BAD_TXN","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Transaction must abort, has a child, or is invalid\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":91},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20393,"byte_end":20404,"line_start":62,"line_end":62,"column_start":11,"column_end":22},"name":"BAD_VALSIZE","qualname":"::error::BAD_VALSIZE","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Unsupported size of key/DB name/data, or wrong `DUPFIXED` size\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":92},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20493,"byte_end":20500,"line_start":64,"line_end":64,"column_start":11,"column_end":18},"name":"BAD_DBI","qualname":"::error::BAD_DBI","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" The specified DBI was changed unexpectedly\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":811},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20822,"byte_end":20826,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"Code","qualname":"::error::Error::Code","value":"Error::Code(c_int)","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" A basic error code returned by LMDB.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":814},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20900,"byte_end":20906,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"NulStr","qualname":"::error::Error::NulStr","value":"Error::NulStr","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" A string path was given which contains a `NUL` byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20982,"byte_end":20990,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"name":"Reopened","qualname":"::error::Error::Reopened","value":"Error::Reopened","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" An attempt was made to open a database which is already open.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":818},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21197,"byte_end":21205,"line_start":83,"line_end":83,"column_start":5,"column_end":13},"name":"Mismatch","qualname":"::error::Error::Mismatch","value":"Error::Mismatch","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" An attempt was made to use two items together which cannot be used\n together.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21290,"byte_end":21301,"line_start":85,"line_end":85,"column_start":5,"column_end":16},"name":"ValRejected","qualname":"::error::Error::ValRejected","value":"Error::ValRejected(String)","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":" A value conversion was rejected. A message explaining why is included.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21404,"byte_end":21418,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"_NonExhaustive","qualname":"::error::Error::_NonExhaustive","value":"Error::_NonExhaustive","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":810},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20607,"byte_end":20612,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Code, NulStr, Reopened, Mismatch, ValRejected, _NonExhaustive}","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":823}],"decl_id":null,"docs":" Error type returned by LMDB.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":20598,"byte_end":21420,"line_start":68,"line_end":89,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21485,"byte_end":21491,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned for all calls that can fail.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23479,"byte_end":23492,"line_start":158,"line_end":158,"column_start":11,"column_end":24},"name":"LmdbResultExt","qualname":"::error::LmdbResultExt","value":"LmdbResultExt","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Extension methods for LMDB results\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23531,"byte_end":23536,"line_start":160,"line_end":160,"column_start":10,"column_end":15},"name":"Inner","qualname":"::error::LmdbResultExt::Inner","value":"type Inner;","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23499,"byte_end":23521,"line_start":159,"line_end":159,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23745,"byte_end":23751,"line_start":166,"line_end":166,"column_start":8,"column_end":14},"name":"to_opt","qualname":"::error::LmdbResultExt::to_opt","value":"fn (self) -> Result<Option<Self::Inner>>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Lift \"not found\" errors to `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23960,"byte_end":23973,"line_start":172,"line_end":172,"column_start":8,"column_end":21},"name":"ignore_exists","qualname":"::error::LmdbResultExt::ignore_exists","value":"fn (self, inner: Self::Inner) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Suppress `KEYEXIST` errors.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":139},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":25185,"byte_end":25189,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"open","qualname":"::env::open","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":846},{"krate":0,"index":866},{"krate":0,"index":863},{"krate":0,"index":861},{"krate":0,"index":859},{"krate":0,"index":853},{"krate":0,"index":851},{"krate":0,"index":848},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":867},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965}],"decl_id":null,"docs":" Flags used when opening an LMDB environment.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":25312,"byte_end":25317,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"name":"Flags","qualname":"::env::open::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":847}],"decl_id":null,"docs":" Flags used when opening an LMDB environment.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":835},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":25989,"byte_end":25997,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"name":"FIXEDMAP","qualname":"::env::open::FIXEDMAP","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Use a fixed address for the mmap region. This flag must be\n specified when creating the environment, and is stored\n persistently in the environment. If successful, the memory map\n will always reside at the same virtual address and pointers\n used to reference data items in the database will be constant\n across multiple invocations. This option may not always work,\n depending on how the operating system has allocated memory to\n shared libraries and other uses. The feature is highly\n experimental.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":836},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":26427,"byte_end":26435,"line_start":45,"line_end":45,"column_start":19,"column_end":27},"name":"NOSUBDIR","qualname":"::env::open::NOSUBDIR","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" By default, LMDB creates its environment in a directory whose\n pathname is given in path, and creates its data and lock files\n under that directory. With this option, the `path` passed to\n `EnvBuilder::open` is used as-is for the database main data\n file. The database lock file is the path with \"-lock\" appended.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":837},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":26703,"byte_end":26709,"line_start":49,"line_end":49,"column_start":19,"column_end":25},"name":"RDONLY","qualname":"::env::open::RDONLY","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Open the environment in read-only mode. No write operations\n will be allowed. LMDB will still modify the lock file - except\n on read-only filesystems, where LMDB does not use locks.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":838},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":27225,"byte_end":27233,"line_start":57,"line_end":57,"column_start":19,"column_end":27},"name":"WRITEMAP","qualname":"::env::open::WRITEMAP","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Use a writeable memory map unless `RDONLY` is set. This is\n faster and uses fewer mallocs, but loses protection from\n application bugs like wild pointer writes and other bad updates\n into the database. Incompatible with nested transactions. Do\n not mix processes with and without `WRITEMAP` on the same\n environment. This can defeat durability (`Environment::sync`\n etc).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":839},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":27870,"byte_end":27880,"line_start":66,"line_end":66,"column_start":19,"column_end":29},"name":"NOMETASYNC","qualname":"::env::open::NOMETASYNC","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Flush system buffers to disk only once per transaction, omit\n the metadata flush. Defer that until the system flushes files\n to disk, or next non-`RDONLY` commit or `Environment::sync()`.\n This optimization maintains database integrity, but a system\n crash may undo the last committed transaction. I.e. it\n preserves the ACI (atomicity, consistency, isolation) but not D\n (durability) database property. This flag may be changed at any\n time using `Environment::set_flags()`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":840},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":29020,"byte_end":29026,"line_start":82,"line_end":82,"column_start":19,"column_end":25},"name":"NOSYNC","qualname":"::env::open::NOSYNC","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Don't flush system buffers to disk when committing a\n transaction. This optimization means a system crash can corrupt\n the database or lose the last transactions if buffers are not\n yet flushed to disk. The risk is governed by how often the\n system flushes dirty buffers to disk and how often\n `Environment::sync()` is called. However, if the filesystem\n preserves write order and the `WRITEMAP` flag is not used,\n transactions exhibit ACI (atomicity, consistency, isolation)\n properties and only lose D (durability). I.e. database\n integrity is maintained, but a system crash may undo the final\n transactions. Note that `(NOSYNC | WRITEMAP)` leaves the system\n with no hint for when to write transactions to disk, unless\n `Environment::sync()` is called. `(MAPASYNC | WRITEMAP)` may be\n preferable. This flag may be changed at any time using\n `Environment::set_flags()`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":841},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":29450,"byte_end":29458,"line_start":88,"line_end":88,"column_start":19,"column_end":27},"name":"MAPASYNC","qualname":"::env::open::MAPASYNC","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" When using `WRITEMAP`, use asynchronous flushes to disk. As\n with `NOSYNC`, a system crash can then corrupt the database or\n lose the last transactions. Calling `Environment::sync()`\n ensures on-disk database integrity until next commit. This flag\n may be changed at any time using `Environment::set_flags()`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":842},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":30197,"byte_end":30202,"line_start":99,"line_end":99,"column_start":19,"column_end":24},"name":"NOTLS","qualname":"::env::open::NOTLS","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Don't use Thread-Local Storage. Tie reader locktable slots to\n transaction objects instead of to threads. I.e.\n `Transaction::reset()` keeps the slot reseved for the\n transaction object. A thread may use parallel read-only\n transactions. A read-only transaction may span threads if the\n user synchronizes its use. Applications that multiplex many\n user threads over individual OS threads need this option. Such\n an application must also serialize the write transactions in an\n OS thread, since LMDB's write locking is unaware of the user\n threads.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":843},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":30724,"byte_end":30730,"line_start":107,"line_end":107,"column_start":19,"column_end":25},"name":"NOLOCK","qualname":"::env::open::NOLOCK","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Don't do any locking. If concurrent access is anticipated, the\n caller must manage all concurrency itself. For proper operation\n the caller must enforce single-writer semantics, and must\n ensure that no readers are using old transactions while a\n writer is active. The simplest approach is to use an exclusive\n lock so that no readers may be active at all when a writer\n begins.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":844},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":31131,"byte_end":31140,"line_start":113,"line_end":113,"column_start":19,"column_end":28},"name":"NORDAHEAD","qualname":"::env::open::NORDAHEAD","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Turn off readahead. Most operating systems perform readahead on\n read requests by default. This option turns it off if the OS\n supports it. Turning it off may help random read performance\n when the DB is larger than RAM and system RAM is full. The\n option is not implemented on Windows.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":845},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":32633,"byte_end":32642,"line_start":133,"line_end":133,"column_start":19,"column_end":28},"name":"NOMEMINIT","qualname":"::env::open::NOMEMINIT","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Don't initialize malloc'd memory before writing to unused\n spaces in the data file. By default, memory for pages written\n to the data file is obtained using malloc. While these pages\n may be reused in subsequent transactions, freshly malloc'd\n pages will be initialized to zeroes before use. This avoids\n persisting leftover data from other code (that used the heap\n and subsequently freed the memory) into the data file. Note\n that many other system libraries may allocate and free memory\n from the heap for arbitrary uses. E.g., stdio may use the heap\n for file I/O buffers. This initialization step has a modest\n performance cost so some applications may want to disable it\n using this flag. This option can be a problem for applications\n which handle sensitive data like passwords, and it makes memory\n checkers like Valgrind noisy. This flag is not needed with\n `WRITEMAP`, which writes directly to the mmap instead of using\n malloc for pages. The initialization is also skipped if\n `RESERVE` is used; the caller is expected to overwrite all of\n the memory that was reserved in that case. This flag may be\n changed at any time using `Environment::set_flags()`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":142},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":32741,"byte_end":32745,"line_start":139,"line_end":139,"column_start":9,"column_end":13},"name":"copy","qualname":"::env::copy","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":969},{"krate":0,"index":989},{"krate":0,"index":986},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":976},{"krate":0,"index":974},{"krate":0,"index":971},{"krate":0,"index":968},{"krate":0,"index":990},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048}],"decl_id":null,"docs":" Flags used when copying an LMDB environment.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":32869,"byte_end":32874,"line_start":145,"line_end":145,"column_start":20,"column_end":25},"name":"Flags","qualname":"::env::copy::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":970}],"decl_id":null,"docs":" Flags used when copying an LMDB environment.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":968},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33124,"byte_end":33131,"line_start":149,"line_end":149,"column_start":19,"column_end":26},"name":"COMPACT","qualname":"::env::copy::COMPACT","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Perform compaction while copying: omit free pages and sequentially\n renumber all pages in output. This option consumes more CPU and\n runs more slowly than the default.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33594,"byte_end":33604,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"EnvBuilder","qualname":"::env::EnvBuilder","value":"EnvBuilder {  }","parent":null,"children":[{"krate":0,"index":1058}],"decl_id":null,"docs":" Handle on an uninitialised LMDB environment to allow configuring pre-open\n options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33711,"byte_end":33714,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<EnvBuilder>::new","value":"fn () -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new, uninitialised environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":34635,"byte_end":34646,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"set_mapsize","qualname":"<EnvBuilder>::set_mapsize","value":"fn (&mut self, size: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the size of the memory map to use for this environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":35387,"byte_end":35401,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"set_maxreaders","qualname":"<EnvBuilder>::set_maxreaders","value":"fn (&mut self, readers: u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of threads/reader slots for the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":36106,"byte_end":36116,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"set_maxdbs","qualname":"<EnvBuilder>::set_maxdbs","value":"fn (&mut self, dbs: u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of named databases for the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":37721,"byte_end":37725,"line_start":270,"line_end":270,"column_start":19,"column_end":23},"name":"open","qualname":"<EnvBuilder>::open","value":"fn (self, path: &str, flags: open::Flags, mode: FileMode) -> Result<Environment>","parent":null,"children":[],"decl_id":null,"docs":" Opens the file or directory at `path` with the given `flags` and, on\n UNIX, permissions given by `mode`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1061},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38190,"byte_end":38201,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"Environment","qualname":"::env::Environment","value":"Environment {  }","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"decl_id":null,"docs":" An LMDB environment which has been opened to a file.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38470,"byte_end":38474,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"Stat","qualname":"::env::Stat","value":"Stat { psize, depth, branch_pages, leaf_pages, overflow_pages, entries }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"decl_id":null,"docs":" Statistics information about an environment.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38459,"byte_end":38880,"line_start":293,"line_end":306,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38564,"byte_end":38569,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"name":"psize","qualname":"::env::Stat::psize","value":"u32","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Size of a database page. This is currently the same for all databases.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1068},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38621,"byte_end":38626,"line_start":297,"line_end":297,"column_start":9,"column_end":14},"name":"depth","qualname":"::env::Stat::depth","value":"u32","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Depth (height) of the B-tree\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1069},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38685,"byte_end":38697,"line_start":299,"line_end":299,"column_start":9,"column_end":21},"name":"branch_pages","qualname":"::env::Stat::branch_pages","value":"usize","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Number of internal (non-leaf) pages\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1070},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38743,"byte_end":38753,"line_start":301,"line_end":301,"column_start":9,"column_end":19},"name":"leaf_pages","qualname":"::env::Stat::leaf_pages","value":"usize","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Number of leaf pages\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1071},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38803,"byte_end":38817,"line_start":303,"line_end":303,"column_start":9,"column_end":23},"name":"overflow_pages","qualname":"::env::Stat::overflow_pages","value":"usize","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Number of overflow pages\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1072},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38863,"byte_end":38870,"line_start":305,"line_end":305,"column_start":9,"column_end":16},"name":"entries","qualname":"::env::Stat::entries","value":"usize","parent":{"krate":0,"index":1066},"children":[],"decl_id":null,"docs":" Number of data items\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1078},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39379,"byte_end":39386,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"EnvInfo","qualname":"::env::EnvInfo","value":"EnvInfo { mapaddr, mapsize, last_pgno, last_txnid, maxreaders, numreaders }","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":" Configuration information about an environment.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39368,"byte_end":39789,"line_start":323,"line_end":336,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":1079},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39430,"byte_end":39437,"line_start":325,"line_end":325,"column_start":9,"column_end":16},"name":"mapaddr","qualname":"::env::EnvInfo::mapaddr","value":"*const libc::c_void","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Address of map, if fixed\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1080},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39498,"byte_end":39505,"line_start":327,"line_end":327,"column_start":9,"column_end":16},"name":"mapsize","qualname":"::env::EnvInfo::mapsize","value":"usize","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Size of the data memory map\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1081},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39555,"byte_end":39564,"line_start":329,"line_end":329,"column_start":9,"column_end":18},"name":"last_pgno","qualname":"::env::EnvInfo::last_pgno","value":"usize","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" ID of the last used page\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1082},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39626,"byte_end":39636,"line_start":331,"line_end":331,"column_start":9,"column_end":19},"name":"last_txnid","qualname":"::env::EnvInfo::last_txnid","value":"usize","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" ID of the last committed transaction\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1083},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39697,"byte_end":39707,"line_start":333,"line_end":333,"column_start":9,"column_end":19},"name":"maxreaders","qualname":"::env::EnvInfo::maxreaders","value":"u32","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" max reader slots in the environment\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1084},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39771,"byte_end":39781,"line_start":335,"line_end":335,"column_start":9,"column_end":19},"name":"numreaders","qualname":"::env::EnvInfo::numreaders","value":"u32","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" max reader slots used in the environment\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":40691,"byte_end":40699,"line_start":357,"line_end":357,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Environment>::from_raw","value":"fn (env: *mut ffi::MDB_env) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap a raw LMDB environment handle in an `Environment`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":41730,"byte_end":41740,"line_start":382,"line_end":382,"column_start":19,"column_end":29},"name":"borrow_raw","qualname":"<Environment>::borrow_raw","value":"fn (env: *mut ffi::MDB_env) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap a raw LMDB environment handle in an `Environment` without taking\n ownership.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":42322,"byte_end":42328,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Environment>::as_raw","value":"fn (&self) -> *mut ffi::MDB_env","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying `MDB_env` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":42939,"byte_end":42947,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Environment>::into_raw","value":"fn (self) -> *mut ffi::MDB_env","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Environment` and return the underlying handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":44086,"byte_end":44090,"line_start":445,"line_end":445,"column_start":12,"column_end":16},"name":"copy","qualname":"<Environment>::copy","value":"fn (&self, path: &str, flags: copy::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy an LMDB environment to the specified path, with options.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":44877,"byte_end":44883,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"copyfd","qualname":"<Environment>::copyfd","value":"fn (&self, fd: Fd, flags: copy::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copy an LMDB environment to the specified file descriptor, with options.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":45126,"byte_end":45130,"line_start":473,"line_end":473,"column_start":12,"column_end":16},"name":"stat","qualname":"<Environment>::stat","value":"fn (&self) -> Result<Stat>","parent":null,"children":[],"decl_id":null,"docs":" Return statistics about the LMDB environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":45429,"byte_end":45433,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"info","qualname":"<Environment>::info","value":"fn (&self) -> Result<EnvInfo>","parent":null,"children":[],"decl_id":null,"docs":" Return information about the LMDB environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":46600,"byte_end":46604,"line_start":510,"line_end":510,"column_start":12,"column_end":16},"name":"sync","qualname":"<Environment>::sync","value":"fn (&self, force: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the data buffers to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":48296,"byte_end":48305,"line_start":552,"line_end":552,"column_start":19,"column_end":28},"name":"set_flags","qualname":"<Environment>::set_flags","value":"fn (&self, flags: open::Flags, onoff: bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set environment flags.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":48553,"byte_end":48558,"line_start":560,"line_end":560,"column_start":12,"column_end":17},"name":"flags","qualname":"<Environment>::flags","value":"fn (&self) -> Result<open::Flags>","parent":null,"children":[],"decl_id":null,"docs":" Get environment flags.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":48961,"byte_end":48965,"line_start":573,"line_end":573,"column_start":12,"column_end":16},"name":"path","qualname":"<Environment>::path","value":"fn (&self) -> Result<&CStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the path that was used in `EnvBuilder::open()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":49565,"byte_end":49567,"line_start":590,"line_end":590,"column_start":19,"column_end":21},"name":"fd","qualname":"<Environment>::fd","value":"fn (&self) -> Result<Fd>","parent":null,"children":[],"decl_id":null,"docs":" Return the filedescriptor for the given environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":50863,"byte_end":50874,"line_start":618,"line_end":618,"column_start":19,"column_end":30},"name":"set_mapsize","qualname":"<Environment>::set_mapsize","value":"fn (&self, size: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the size of the memory map to use for this environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":51084,"byte_end":51094,"line_start":624,"line_end":624,"column_start":12,"column_end":22},"name":"maxreaders","qualname":"<Environment>::maxreaders","value":"fn (&self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum number of threads/reader slots for the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":51465,"byte_end":51475,"line_start":636,"line_end":636,"column_start":12,"column_end":22},"name":"maxkeysize","qualname":"<Environment>::maxkeysize","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum size of keys and `DUPSORT` data we can write.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":51723,"byte_end":51735,"line_start":645,"line_end":645,"column_start":12,"column_end":24},"name":"reader_check","qualname":"<Environment>::reader_check","value":"fn (&self) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Check for stale entries in the reader lock table.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":205},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":54621,"byte_end":54623,"line_start":26,"line_end":26,"column_start":9,"column_end":11},"name":"db","qualname":"::dbi::db","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":1097},{"krate":0,"index":1117},{"krate":0,"index":1114},{"krate":0,"index":1112},{"krate":0,"index":1110},{"krate":0,"index":1104},{"krate":0,"index":1102},{"krate":0,"index":1099},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1118},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" Flags used when opening databases.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":54736,"byte_end":54741,"line_start":32,"line_end":32,"column_start":20,"column_end":25},"name":"Flags","qualname":"::dbi::db::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":1098}],"decl_id":null,"docs":" Flags used when opening databases.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1090},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":56468,"byte_end":56478,"line_start":67,"line_end":67,"column_start":19,"column_end":29},"name":"REVERSEKEY","qualname":"::dbi::db::REVERSEKEY","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Keys are strings to be compared in reverse order, from the end\n of the strings to the beginning. By default, Keys are treated\n as strings and compared from beginning to end.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1091},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":58053,"byte_end":58060,"line_start":98,"line_end":98,"column_start":19,"column_end":26},"name":"DUPSORT","qualname":"::dbi::db::DUPSORT","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Duplicate keys may be used in the database. (Or, from another\n perspective, keys may have multiple data items, stored in\n sorted order.) By default keys must be unique and may have only\n a single data item.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1092},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":59984,"byte_end":59994,"line_start":136,"line_end":136,"column_start":19,"column_end":29},"name":"INTEGERKEY","qualname":"::dbi::db::INTEGERKEY","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Keys are binary integers in native byte order, either\n `libc::c_uint` or `libc::size_t`, and will be sorted as such.\n The keys must all be of the same size.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1093},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":63600,"byte_end":63608,"line_start":211,"line_end":211,"column_start":19,"column_end":27},"name":"DUPFIXED","qualname":"::dbi::db::DUPFIXED","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" This flag may only be used in combination with `DUPSORT`. This\n option tells the library that the data items for this database\n are all the same size, which allows further optimizations in\n storage and retrieval. When all data items are the same size,\n the `get_multiple` and `next_multiple` cursor operations may be\n used to retrieve multiple items at once.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1094},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":63779,"byte_end":63789,"line_start":214,"line_end":214,"column_start":19,"column_end":29},"name":"INTEGERDUP","qualname":"::dbi::db::INTEGERDUP","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" This option specifies that duplicate data items are binary\n integers, similar to `INTEGERKEY` keys.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1095},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":65452,"byte_end":65462,"line_start":248,"line_end":248,"column_start":19,"column_end":29},"name":"REVERSEDUP","qualname":"::dbi::db::REVERSEDUP","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" This option specifies that duplicate data items should be\n compared as strings in reverse order.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1096},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":65638,"byte_end":65644,"line_start":251,"line_end":251,"column_start":19,"column_end":25},"name":"CREATE","qualname":"::dbi::db::CREATE","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Create the named database if it doesn't exist. This option is\n not allowed in a read-only environment.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70511,"byte_end":70519,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"Database","qualname":"::dbi::Database","value":"Database {  }","parent":null,"children":[{"krate":0,"index":1213}],"decl_id":null,"docs":" A handle on an LMDB database within an environment.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70652,"byte_end":70667,"line_start":400,"line_end":400,"column_start":12,"column_end":27},"name":"DatabaseOptions","qualname":"::dbi::DatabaseOptions","value":"DatabaseOptions { flags }","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"decl_id":null,"docs":" Describes the options used for creating or opening a database.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1218},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70720,"byte_end":70725,"line_start":402,"line_end":402,"column_start":9,"column_end":14},"name":"flags","qualname":"::dbi::DatabaseOptions::flags","value":"dbi::db::Flags","parent":{"krate":0,"index":1217},"children":[],"decl_id":null,"docs":" The integer flags to pass to LMDB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70963,"byte_end":70966,"line_start":410,"line_end":410,"column_start":12,"column_end":15},"name":"new","qualname":"<DatabaseOptions>::new","value":"fn (flags: db::Flags) -> DatabaseOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DatabaseOptions` with the given flags, using natural key\n and value ordering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":71345,"byte_end":71353,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"defaults","qualname":"<DatabaseOptions>::defaults","value":"fn () -> DatabaseOptions","parent":null,"children":[],"decl_id":null,"docs":" Synonym for `DatabaseOptions::new(db::Flags::empty())`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":74015,"byte_end":74027,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"name":"sort_keys_as","qualname":"<DatabaseOptions>::sort_keys_as","value":"fn <K> (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sorts keys in the database by interpreting them as `K` and using their\n comparison order. Keys which fail to convert are considered equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":75128,"byte_end":75142,"line_start":506,"line_end":506,"column_start":12,"column_end":26},"name":"sort_values_as","qualname":"<DatabaseOptions>::sort_values_as","value":"fn <V> (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sorts duplicate values in the database by interpreting them as `V` and\n using their comparison order. Values which fail to convert are\n considered equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":75690,"byte_end":75700,"line_start":517,"line_end":517,"column_start":12,"column_end":22},"name":"create_map","qualname":"<DatabaseOptions>::create_map","value":"fn <K> () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Concisely creates a `DatabaseOptions` to configure a database to have a\n 1:1 mapping using the given key type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":76457,"byte_end":76480,"line_start":535,"line_end":535,"column_start":12,"column_end":35},"name":"create_multimap_unsized","qualname":"<DatabaseOptions>::create_multimap_unsized","value":"fn <K, V> () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Concisely creates a `DatabaseOptions` to configure a database to have a\n 1:M mapping using the given key and unsized value types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":77167,"byte_end":77182,"line_start":554,"line_end":554,"column_start":12,"column_end":27},"name":"create_multimap","qualname":"<DatabaseOptions>::create_multimap","value":"fn <K, V> () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Concisely creates a `DatabaseOptions` to configure a database to have a\n 1:M mapping using the given key and fixed-size value types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":82578,"byte_end":82582,"line_start":694,"line_end":694,"column_start":12,"column_end":16},"name":"open","qualname":"<Database>::open","value":"fn <E> (env: E, name: Option<&str>, options: &DatabaseOptions) -> Result<Database<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Open a database in the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":85150,"byte_end":85158,"line_start":765,"line_end":765,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Database>::from_raw","value":"fn <E> (env: E, raw: ffi::MDB_dbi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap a raw `MDB_dbi` associated with this environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":86330,"byte_end":86340,"line_start":801,"line_end":801,"column_start":19,"column_end":29},"name":"borrow_raw","qualname":"<Database>::borrow_raw","value":"fn <E> (env: E, raw: ffi::MDB_dbi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap a raw `MDB_dbi` associated with this environment without taking\n ownership.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":88105,"byte_end":88111,"line_start":849,"line_end":849,"column_start":12,"column_end":18},"name":"delete","qualname":"<Database>::delete","value":"fn (self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes this database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":89669,"byte_end":89672,"line_start":888,"line_end":888,"column_start":12,"column_end":15},"name":"env","qualname":"<Database>::env","value":"fn (&self) -> &Environment","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `Environment` to which this `Database`\n belongs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":89648,"byte_end":89657,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":89904,"byte_end":89919,"line_start":896,"line_end":896,"column_start":12,"column_end":27},"name":"assert_same_env","qualname":"<Database>::assert_same_env","value":"fn (&self, other_env: &Environment) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `other_env` is the same as the environment on this\n `Database`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":90412,"byte_end":90415,"line_start":913,"line_end":913,"column_start":12,"column_end":15},"name":"dbi","qualname":"<Database>::dbi","value":"fn (&self) -> ffi::MDB_dbi","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying integer handle for this database.","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.4\", note = \"use as_raw() instead\")","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":90339,"byte_end":90400,"line_start":912,"line_end":912,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":90558,"byte_end":90564,"line_start":919,"line_end":919,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Database>::as_raw","value":"fn (&self) -> ffi::MDB_dbi","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying integer handle for this database.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":90537,"byte_end":90546,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":90875,"byte_end":90883,"line_start":928,"line_end":928,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Database>::into_raw","value":"fn (mut self) -> ffi::MDB_dbi","parent":null,"children":[],"decl_id":null,"docs":" Consume self, returning the underlying integer handle for this\n database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":91242,"byte_end":91248,"line_start":938,"line_end":938,"column_start":12,"column_end":18},"name":"disown","qualname":"<Database>::disown","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevent the underlying `MDB_dbi` handle from being closed when this\n `Database` is dropped.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":309},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1226},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1233},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1240},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1248},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1255},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1262},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":383},{"krate":0,"index":1281},{"krate":0,"index":1285},{"krate":0,"index":1289},{"krate":0,"index":1293},{"krate":0,"index":1297},{"krate":0,"index":1301},{"krate":0,"index":1305},{"krate":0,"index":1309},{"krate":0,"index":1313},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1333},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1345},{"krate":0,"index":1349},{"krate":0,"index":1353},{"krate":0,"index":1357},{"krate":0,"index":1361},{"krate":0,"index":1365},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1417},{"krate":0,"index":1421},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1437},{"krate":0,"index":1441},{"krate":0,"index":1445},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":1457},{"krate":0,"index":1461},{"krate":0,"index":1465},{"krate":0,"index":1469},{"krate":0,"index":1473},{"krate":0,"index":1477},{"krate":0,"index":1481},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":1493},{"krate":0,"index":1497},{"krate":0,"index":1501},{"krate":0,"index":1505},{"krate":0,"index":1509},{"krate":0,"index":1513},{"krate":0,"index":1517},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":1529},{"krate":0,"index":1533},{"krate":0,"index":1537},{"krate":0,"index":1541},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434}],"decl_id":null,"docs":" Module containing public traits.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":273},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93642,"byte_end":93647,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"TxExt","qualname":"::traits::TxExt","value":"TxExt","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Extension trait for `Rc` and `Arc` that allows up-casting a reference to\n `ReadTransaction` or `WriteTransaction` to `ConstTransaction`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":274},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93686,"byte_end":93691,"line_start":38,"line_end":38,"column_start":10,"column_end":15},"name":"Const","qualname":"::traits::TxExt::Const","value":"type Const;","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93654,"byte_end":93676,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93882,"byte_end":93890,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"to_const","qualname":"::traits::TxExt::to_const","value":"fn (self) -> Self::Const","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" Returns `self` as a handle to a `ConstTransaction` rather than the\n subtype that was passed in.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":95458,"byte_end":95470,"line_start":77,"line_end":77,"column_start":11,"column_end":23},"name":"CreateCursor","qualname":"::traits::CreateCursor","value":"CreateCursor<'txn>","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":" Types of transaction references which can be used to construct `Cursor`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":95653,"byte_end":95659,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"cursor","qualname":"::traits::CreateCursor::cursor","value":"fn <'db, DB> (&self, db: DB) -> error::Result<Cursor<'txn, 'db>>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Create a cursor using `self` as the reference to the containing\n transaction and `db` as the database the cursor will read from and\n write into.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":335},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":98559,"byte_end":98570,"line_start":163,"line_end":163,"column_start":11,"column_end":22},"name":"AssocCursor","qualname":"::traits::AssocCursor","value":"AssocCursor<'txn>","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" Types of transaction references which can be used to renew `StaleCursor`s\n into functional `Cursor`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":98784,"byte_end":98796,"line_start":168,"line_end":168,"column_start":8,"column_end":20},"name":"assoc_cursor","qualname":"::traits::AssocCursor::assoc_cursor","value":"fn <'db> (&self, cursor: StaleCursor<'db>) -> error::Result<Cursor<'txn, 'db>>","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":" Associates a saved read-only with this transaction.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":100581,"byte_end":100592,"line_start":209,"line_end":209,"column_start":11,"column_end":22},"name":"AsLmdbBytes","qualname":"::traits::AsLmdbBytes","value":"AsLmdbBytes","parent":null,"children":[{"krate":0,"index":353}],"decl_id":null,"docs":" Translates a value into a byte slice to be stored in LMDB.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":100693,"byte_end":100706,"line_start":212,"line_end":212,"column_start":8,"column_end":21},"name":"as_lmdb_bytes","qualname":"::traits::AsLmdbBytes::as_lmdb_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Casts the given reference to a byte slice appropriate for storage\n in LMDB.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":101405,"byte_end":101418,"line_start":228,"line_end":228,"column_start":11,"column_end":24},"name":"FromLmdbBytes","qualname":"::traits::FromLmdbBytes","value":"FromLmdbBytes","parent":null,"children":[{"krate":0,"index":355}],"decl_id":null,"docs":" Inverts `AsLmdbBytes`, producing a reference to a structure inside a\n byte array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":101596,"byte_end":101611,"line_start":232,"line_end":232,"column_start":8,"column_end":23},"name":"from_lmdb_bytes","qualname":"::traits::FromLmdbBytes::from_lmdb_bytes","value":"fn (&[u8]) -> Result<&Self, String>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":" Given a byte slice, return an instance of `Self` described, or\n `Err` with an error message if the given byte slice is not an\n appropriate value.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":356},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":101806,"byte_end":101827,"line_start":238,"line_end":238,"column_start":11,"column_end":32},"name":"FromReservedLmdbBytes","qualname":"::traits::FromReservedLmdbBytes","value":"FromReservedLmdbBytes","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" Like `FromLmdbBytes`, but can be used with `put_reserve()` calls.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":102202,"byte_end":102226,"line_start":249,"line_end":249,"column_start":15,"column_end":39},"name":"from_reserved_lmdb_bytes","qualname":"::traits::FromReservedLmdbBytes::from_reserved_lmdb_bytes","value":"fn (&mut [u8]) -> &mut Self","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Given a mutable byte slice containing arbitrary data, return an\n instance of `Self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":107698,"byte_end":107705,"line_start":370,"line_end":370,"column_start":18,"column_end":25},"name":"LmdbRaw","qualname":"::traits::LmdbRaw","value":"LmdbRaw: Copy + Sized","parent":null,"children":[{"krate":0,"index":359}],"decl_id":null,"docs":" Marker trait indicating a value is to be stored in LMDB by simply\n copying it in.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":107852,"byte_end":107865,"line_start":374,"line_end":374,"column_start":8,"column_end":21},"name":"reported_type","qualname":"::traits::LmdbRaw::reported_type","value":"fn () -> String","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Returns the name of this type to report in error messages.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108722,"byte_end":108740,"line_start":395,"line_end":395,"column_start":18,"column_end":36},"name":"LmdbRawIfUnaligned","qualname":"::traits::LmdbRawIfUnaligned","value":"LmdbRawIfUnaligned: Copy + Sized","parent":null,"children":[{"krate":0,"index":361}],"decl_id":null,"docs":" Marker trait for types where `Unaligned<T>` is `LmdbRaw`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108887,"byte_end":108900,"line_start":399,"line_end":399,"column_start":8,"column_end":21},"name":"reported_type","qualname":"::traits::LmdbRawIfUnaligned::reported_type","value":"fn () -> String","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":" Returns the name of this type to report in error messages.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":109335,"byte_end":109345,"line_start":417,"line_end":417,"column_start":18,"column_end":28},"name":"LmdbOrdKey","qualname":"::traits::LmdbOrdKey","value":"LmdbOrdKey: FromLmdbBytes + Ord","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"decl_id":null,"docs":" Trait describing a value which can be used as an LMDB key by having LMDB\n call into the value's `Ord` implementation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":110682,"byte_end":110698,"line_start":444,"line_end":444,"column_start":8,"column_end":24},"name":"ordered_by_bytes","qualname":"::traits::LmdbOrdKey::ordered_by_bytes","value":"fn () -> bool","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Returns whether the default LMDB byte-by-byte comparison is correct for\n valid values of this type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111111,"byte_end":111129,"line_start":453,"line_end":453,"column_start":8,"column_end":26},"name":"ordered_as_integer","qualname":"::traits::LmdbOrdKey::ordered_as_integer","value":"fn () -> bool","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Returns whether LMDB will correctly handle this value with the\n `INTEGERKEY` or `INTEGERDUP` flags.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111409,"byte_end":111430,"line_start":464,"line_end":464,"column_start":18,"column_end":39},"name":"LmdbOrdKeyIfUnaligned","qualname":"::traits::LmdbOrdKeyIfUnaligned","value":"LmdbOrdKeyIfUnaligned: LmdbRawIfUnaligned + Ord","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" Marker trait for types where `Unaligned<T>` is `LmdbOrdKey`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111513,"byte_end":111529,"line_start":466,"line_end":466,"column_start":8,"column_end":24},"name":"ordered_by_bytes","qualname":"::traits::LmdbOrdKeyIfUnaligned::ordered_by_bytes","value":"fn () -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Like `LmdbOrdKey::ordered_by_bytes()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111605,"byte_end":111623,"line_start":468,"line_end":468,"column_start":8,"column_end":26},"name":"ordered_as_integer","qualname":"::traits::LmdbOrdKeyIfUnaligned::ordered_as_integer","value":"fn () -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Like `LmdbOrdKey::ordered_as_integer()`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121091,"byte_end":121100,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"Unaligned","qualname":"::unaligned::Unaligned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for arbitrary `Copy` types which lifts their alignment\n restrictions.","sig":null,"attributes":[{"value":"repr(packed)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121064,"byte_end":121079,"line_start":42,"line_end":42,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121781,"byte_end":121784,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Unaligned<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `t` in an `Unaligned` marker.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121974,"byte_end":121980,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"of_ref","qualname":"<Unaligned<T>>::of_ref","value":"fn (t: &T) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `t` as if it were wrapped by `Unaligned`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":122188,"byte_end":122194,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"of_mut","qualname":"<Unaligned<T>>::of_mut","value":"fn (t: &mut T) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `t` as if it were wrapped by `Unaligned`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":122463,"byte_end":122466,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"get","qualname":"<Unaligned<T>>::get","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the contained value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":122540,"byte_end":122543,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"set","qualname":"<Unaligned<T>>::set","value":"fn (&mut self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the contained value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":122626,"byte_end":122635,"line_start":96,"line_end":96,"column_start":8,"column_end":17},"name":"unaligned","qualname":"::unaligned::unaligned","value":"fn <T> (t: &T) -> &Unaligned<T>","parent":null,"children":[],"decl_id":null,"docs":" Synonym for `Unaligned::of_ref()`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":126849,"byte_end":126852,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"put","qualname":"::tx::put","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":1646},{"krate":0,"index":1666},{"krate":0,"index":1663},{"krate":0,"index":1661},{"krate":0,"index":1659},{"krate":0,"index":1653},{"krate":0,"index":1651},{"krate":0,"index":1648},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1667},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737}],"decl_id":null,"docs":" Flags used when calling the various `put` functions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":127241,"byte_end":127246,"line_start":39,"line_end":39,"column_start":20,"column_end":25},"name":"Flags","qualname":"::tx::put::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":1647}],"decl_id":null,"docs":" Flags used when calling the various `put` functions.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1642},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":130378,"byte_end":130387,"line_start":100,"line_end":100,"column_start":19,"column_end":28},"name":"NODUPDATA","qualname":"::tx::put::NODUPDATA","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Enter the new key/data pair only if it does not already appear\n in the database. This flag may only be specified if the\n database was opened with `DUPSORT`. The function will return\n `KEYEXIST` if the key/data pair already appears in the\n database.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1643},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":133625,"byte_end":133636,"line_start":163,"line_end":163,"column_start":19,"column_end":30},"name":"NOOVERWRITE","qualname":"::tx::put::NOOVERWRITE","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Enter the new key/data pair only if the key does not already\n appear in the database. The function will return `KEYEXIST` if\n the key already appears in the database, even if the database\n supports duplicates (`DUPSORT`).","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1644},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":135053,"byte_end":135059,"line_start":192,"line_end":192,"column_start":19,"column_end":25},"name":"APPEND","qualname":"::tx::put::APPEND","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Append the given key/data pair to the end of the database. This\n option allows fast bulk loading when keys are already known to\n be in the correct order. Loading unsorted keys with this flag\n will cause a `KEYEXIST` error.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1645},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":135162,"byte_end":135171,"line_start":194,"line_end":194,"column_start":19,"column_end":28},"name":"APPENDDUP","qualname":"::tx::put::APPENDDUP","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" As with `APPEND` above, but for sorted dup data.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":527},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":135257,"byte_end":135260,"line_start":200,"line_end":200,"column_start":9,"column_end":12},"name":"del","qualname":"::tx::del","value":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":1741},{"krate":0,"index":1761},{"krate":0,"index":1758},{"krate":0,"index":1756},{"krate":0,"index":1754},{"krate":0,"index":1748},{"krate":0,"index":1746},{"krate":0,"index":1743},{"krate":0,"index":1740},{"krate":0,"index":1762},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820}],"decl_id":null,"docs":" Flags used when deleting items.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1741},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":135382,"byte_end":135387,"line_start":206,"line_end":206,"column_start":20,"column_end":25},"name":"Flags","qualname":"::tx::del::Flags","value":"Flags {  }","parent":null,"children":[{"krate":0,"index":1742}],"decl_id":null,"docs":" Flags used when deleting items via cursors.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}},{"value":"rustc_copy_clone_marker","span":{"file_name":"<::bitflags::bitflags macros>","byte_start":9911955,"byte_end":9911993,"line_start":6,"line_end":6,"column_start":18,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1740},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":137186,"byte_end":137195,"line_start":242,"line_end":242,"column_start":19,"column_end":28},"name":"NODUPDATA","qualname":"::tx::del::NODUPDATA","value":"Flags","parent":null,"children":[],"decl_id":null,"docs":" Delete all of the data items for the current key instead of\n just the current item. This flag may only be specified if the\n database was opened with `DUPSORT`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1828},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":140153,"byte_end":140169,"line_start":323,"line_end":323,"column_start":12,"column_end":28},"name":"ConstTransaction","qualname":"::tx::ConstTransaction","value":"ConstTransaction {  }","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832}],"decl_id":null,"docs":" Base functionality for an LMDB transaction.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":141370,"byte_end":141385,"line_start":365,"line_end":365,"column_start":12,"column_end":27},"name":"ReadTransaction","qualname":"::tx::ReadTransaction","value":"","parent":null,"children":[],"decl_id":null,"docs":" A read-only LMDB transaction.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":142454,"byte_end":142470,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"WriteTransaction","qualname":"::tx::WriteTransaction","value":"","parent":null,"children":[],"decl_id":null,"docs":" A read-write LMDB transaction.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":142718,"byte_end":142734,"line_start":413,"line_end":413,"column_start":12,"column_end":28},"name":"ResetTransaction","qualname":"::tx::ResetTransaction","value":"","parent":null,"children":[],"decl_id":null,"docs":" A read-only LMDB transaction that has been reset.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1857},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":144189,"byte_end":144202,"line_start":451,"line_end":451,"column_start":12,"column_end":25},"name":"ConstAccessor","qualname":"::tx::ConstAccessor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A read-only data accessor obtained from a `ConstTransaction`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":146405,"byte_end":146418,"line_start":503,"line_end":503,"column_start":12,"column_end":25},"name":"WriteAccessor","qualname":"::tx::WriteAccessor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A read-write data accessor obtained from a `WriteTransaction`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":148460,"byte_end":148466,"line_start":559,"line_end":559,"column_start":12,"column_end":18},"name":"access","qualname":"<ConstTransaction>::access","value":"fn (&self) -> ConstAccessor","parent":null,"children":[],"decl_id":null,"docs":" Returns an accessor used to manipulate data in this transaction.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":148439,"byte_end":148448,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":149204,"byte_end":149210,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"cursor","qualname":"<ConstTransaction>::cursor","value":"fn <'txn, 'db, DB> (&'txn self, db: DB) -> Result<Cursor<'txn, 'db>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor scoped to this transaction, bound to the given\n database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":149183,"byte_end":149192,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":149493,"byte_end":149495,"line_start":584,"line_end":584,"column_start":12,"column_end":14},"name":"id","qualname":"<ConstTransaction>::id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the internal id of this transaction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":149644,"byte_end":149651,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"db_stat","qualname":"<ConstTransaction>::db_stat","value":"fn (&self, db: &Database) -> Result<Stat>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves statistics for a database.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":149992,"byte_end":150000,"line_start":602,"line_end":602,"column_start":12,"column_end":20},"name":"db_flags","qualname":"<ConstTransaction>::db_flags","value":"fn (&self, db: &Database) -> Result<db::Flags>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the DB flags for a database handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":152136,"byte_end":152139,"line_start":674,"line_end":674,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadTransaction>::new","value":"fn <E> (env: E) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Opens a new, read-only transaction within the given environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":155785,"byte_end":155798,"line_start":764,"line_end":764,"column_start":12,"column_end":25},"name":"dissoc_cursor","qualname":"<ReadTransaction>::dissoc_cursor","value":"fn <'txn, 'db> (&self, cursor: Cursor<'txn, 'db>) -> Result<StaleCursor<'db>>","parent":null,"children":[],"decl_id":null,"docs":" Dissociates the given cursor from this transaction and its database,\n returning a `StaleCursor` which can be reused later.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":156770,"byte_end":156782,"line_start":785,"line_end":785,"column_start":12,"column_end":24},"name":"assoc_cursor","qualname":"<ReadTransaction>::assoc_cursor","value":"fn <'txn, 'db> (&'txn self, cursor: StaleCursor<'db>) -> Result<Cursor<'txn, 'db>>","parent":null,"children":[],"decl_id":null,"docs":" Associates a saved read-only with this transaction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158242,"byte_end":158247,"line_start":828,"line_end":828,"column_start":12,"column_end":17},"name":"reset","qualname":"<ReadTransaction>::reset","value":"fn (self) -> ResetTransaction<'env>","parent":null,"children":[],"decl_id":null,"docs":" Resets this transaction, releasing most of its resources but allowing\n it to be quickly renewed if desired.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158510,"byte_end":158515,"line_start":837,"line_end":837,"column_start":12,"column_end":17},"name":"renew","qualname":"<ResetTransaction>::renew","value":"fn (self) -> Result<ReadTransaction<'env>>","parent":null,"children":[],"decl_id":null,"docs":" Renews this read-only transaction, making it available for more\n reading.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":159436,"byte_end":159439,"line_start":868,"line_end":868,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteTransaction>::new","value":"fn <E> (env: E) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, read-write transaction in the given environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":162540,"byte_end":162548,"line_start":946,"line_end":946,"column_start":12,"column_end":20},"name":"child_tx","qualname":"<WriteTransaction>::child_tx","value":"fn <'a> (&'a mut self) -> Result<WriteTransaction<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a new, read-write transaction as a child transaction of the given\n parent. While the new transaction exists, no operations may be\n performed on the parent or any of its cursors. (These bindings are\n actually stricter, and do not permit cursors or other references into\n the parent to coexist with the child transaction.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":162826,"byte_end":162832,"line_start":954,"line_end":954,"column_start":12,"column_end":18},"name":"commit","qualname":"<WriteTransaction>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Commits this write transaction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":163149,"byte_end":163155,"line_start":967,"line_end":967,"column_start":12,"column_end":18},"name":"access","qualname":"<WriteTransaction>::access","value":"fn (&self) -> WriteAccessor","parent":null,"children":[],"decl_id":null,"docs":" Returns a read/write accessor on this transaction.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":163128,"byte_end":163137,"line_start":966,"line_end":966,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":164285,"byte_end":164288,"line_start":994,"line_end":994,"column_start":12,"column_end":15},"name":"get","qualname":"<ConstAccessor>::get","value":"fn <K, V> (&self, db: &Database, key: &K) -> Result<&V>","parent":null,"children":[],"decl_id":null,"docs":" Get items from a database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":164264,"byte_end":164273,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":165375,"byte_end":165378,"line_start":1034,"line_end":1034,"column_start":12,"column_end":15},"name":"put","qualname":"<WriteAccessor>::put","value":"fn <K, V> (&mut self, db: &Database, key: &K, value: &V, flags: put::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Store items into a database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":165354,"byte_end":165363,"line_start":1033,"line_end":1033,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":167660,"byte_end":167671,"line_start":1098,"line_end":1098,"column_start":12,"column_end":23},"name":"put_reserve","qualname":"<WriteAccessor>::put_reserve","value":"fn <K, V> (&mut self, db: &Database, key: &K, flags: put::Flags) -> Result<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Store items into a database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":167639,"byte_end":167648,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":169588,"byte_end":169605,"line_start":1146,"line_end":1146,"column_start":12,"column_end":29},"name":"put_reserve_array","qualname":"<WriteAccessor>::put_reserve_array","value":"fn <K, V> (&mut self, db: &Database, key: &K, count: usize, flags: put::Flags) -> Result<&mut [V]>","parent":null,"children":[],"decl_id":null,"docs":" Store items into a database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":169567,"byte_end":169576,"line_start":1145,"line_end":1145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":170680,"byte_end":170699,"line_start":1173,"line_end":1173,"column_start":19,"column_end":38},"name":"put_reserve_unsized","qualname":"<WriteAccessor>::put_reserve_unsized","value":"fn <K, V> (&mut self, db: &Database, key: &K, size: usize, flags: put::Flags) -> Result<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Store items into a database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":170652,"byte_end":170661,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":172473,"byte_end":172480,"line_start":1220,"line_end":1220,"column_start":12,"column_end":19},"name":"del_key","qualname":"<WriteAccessor>::del_key","value":"fn <K> (&mut self, db: &Database, key: &K) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete items from a database by key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":172452,"byte_end":172461,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":174223,"byte_end":174231,"line_start":1266,"line_end":1266,"column_start":12,"column_end":20},"name":"del_item","qualname":"<WriteAccessor>::del_item","value":"fn <K, V> (&mut self, db: &Database, key: &K, val: &V) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete items from a database by key and value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":174202,"byte_end":174211,"line_start":1265,"line_end":1265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":175588,"byte_end":175596,"line_start":1307,"line_end":1307,"column_start":12,"column_end":20},"name":"clear_db","qualname":"<WriteAccessor>::clear_db","value":"fn (&mut self, db: &Database) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completely clears the content of the given database.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1877},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":182124,"byte_end":182130,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882}],"decl_id":null,"docs":" A cursor into an LMDB database.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1887},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":182961,"byte_end":182972,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"StaleCursor","qualname":"::cursor::StaleCursor","value":"StaleCursor {  }","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891}],"decl_id":null,"docs":" A read-only cursor which has been dissociated from its original\n transaction, so that it can be rebound later.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184715,"byte_end":184724,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"construct","qualname":"<Cursor>::construct","value":"fn (txn: NonSyncSupercow<'txn, ConstTransaction<'txn>>, db: Supercow<'db, Database<'db>>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Directly construct a cursor with the given transaction and database\n handles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":185641,"byte_end":185651,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"from_stale","qualname":"<Cursor>::from_stale","value":"fn (stale: StaleCursor<'db>, txn: NonSyncSupercow<'txn, ConstTransaction<'txn>>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Directly renew a `StaleCursor` into a functional `Cursor` using the\n given database handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":190419,"byte_end":190424,"line_start":444,"line_end":444,"column_start":12,"column_end":17},"name":"first","qualname":"<Cursor>::first","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the first key/value pair in the database\n and returns that pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":191812,"byte_end":191821,"line_start":479,"line_end":479,"column_start":12,"column_end":21},"name":"first_dup","qualname":"<Cursor>::first_dup","value":"fn <'access, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the first key/value pair whose key is equal\n to the current key, returning the value of that pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184135,"byte_end":184144,"line_start":247,"line_end":247,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":193045,"byte_end":193052,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"seek_kv","qualname":"<Cursor>::seek_kv","value":"fn <K, V> (&mut self, key: &K, val: &V) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the given (key,value) pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":193024,"byte_end":193033,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":195066,"byte_end":195082,"line_start":564,"line_end":564,"column_start":12,"column_end":28},"name":"seek_k_nearest_v","qualname":"<Cursor>::seek_k_nearest_v","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor, key: &K, val: &V) -> Result<&'access V>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the given key and the \"nearest\" value to `val`,\n that is, the first (according to sorting) item whose key equals `key`\n and whose value is greater than or equal to `val`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":195045,"byte_end":195054,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":196517,"byte_end":196528,"line_start":600,"line_end":600,"column_start":12,"column_end":23},"name":"get_current","qualname":"<Cursor>::get_current","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current key/value pair under this cursor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":197392,"byte_end":197404,"line_start":621,"line_end":621,"column_start":12,"column_end":24},"name":"get_multiple","qualname":"<Cursor>::get_multiple","value":"fn <'access, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns as many items as possible with the current key from the\n current cursor position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":197371,"byte_end":197380,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":199158,"byte_end":199171,"line_start":664,"line_end":664,"column_start":12,"column_end":25},"name":"next_multiple","qualname":"<Cursor>::next_multiple","value":"fn <'access, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Continues fetching items from a cursor positioned by a call to\n `get_multiple()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184135,"byte_end":184144,"line_start":247,"line_end":247,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":200321,"byte_end":200325,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"last","qualname":"<Cursor>::last","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the last key/value pair in the database,\n and returns that pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":201749,"byte_end":201757,"line_start":731,"line_end":731,"column_start":12,"column_end":20},"name":"last_dup","qualname":"<Cursor>::last_dup","value":"fn <'access, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the last key/value pair whose key is equal\n to the current key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184135,"byte_end":184144,"line_start":247,"line_end":247,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":203375,"byte_end":203379,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"next","qualname":"<Cursor>::next","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Advances the cursor to the key/value pair following this one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":204850,"byte_end":204858,"line_start":805,"line_end":805,"column_start":12,"column_end":20},"name":"next_dup","qualname":"<Cursor>::next_dup","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Advances the cursor to the next value in the current key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":206437,"byte_end":206447,"line_start":843,"line_end":843,"column_start":12,"column_end":22},"name":"next_nodup","qualname":"<Cursor>::next_nodup","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Advances the cursor to the first item of the key following the\n current key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":208057,"byte_end":208061,"line_start":881,"line_end":881,"column_start":12,"column_end":16},"name":"prev","qualname":"<Cursor>::prev","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Retreats the cursor to the previous key/value pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":209618,"byte_end":209626,"line_start":918,"line_end":918,"column_start":12,"column_end":20},"name":"prev_dup","qualname":"<Cursor>::prev_dup","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Retreats the cursor to the previous value in the current key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":211176,"byte_end":211186,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"prev_nodup","qualname":"<Cursor>::prev_nodup","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Retreats the cursor to the final item of the previous key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":183728,"byte_end":183737,"line_start":233,"line_end":233,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":212291,"byte_end":212297,"line_start":988,"line_end":988,"column_start":12,"column_end":18},"name":"seek_k","qualname":"<Cursor>::seek_k","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor, key: &K) -> Result<&'access V>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the first item of the given key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":212270,"byte_end":212279,"line_start":987,"line_end":987,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":213624,"byte_end":213635,"line_start":1026,"line_end":1026,"column_start":12,"column_end":23},"name":"seek_k_both","qualname":"<Cursor>::seek_k_both","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor, key: &K) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the first item of the given key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":213603,"byte_end":213612,"line_start":1025,"line_end":1025,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":215058,"byte_end":215070,"line_start":1065,"line_end":1065,"column_start":12,"column_end":24},"name":"seek_range_k","qualname":"<Cursor>::seek_range_k","value":"fn <'access, K, V> (&mut self, access: &'access ConstAccessor, key: &K) -> Result<(&'access K, &'access V)>","parent":null,"children":[],"decl_id":null,"docs":" Positions the cursor at the first item whose key is greater than or\n equal to `key`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":215037,"byte_end":215046,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":216480,"byte_end":216483,"line_start":1104,"line_end":1104,"column_start":12,"column_end":15},"name":"put","qualname":"<Cursor>::put","value":"fn <K, V> (&mut self, access: &mut WriteAccessor, key: &K, val: &V, flags: put::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a single value through this cursor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":216459,"byte_end":216468,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":218327,"byte_end":218336,"line_start":1158,"line_end":1158,"column_start":12,"column_end":21},"name":"overwrite","qualname":"<Cursor>::overwrite","value":"fn <K, V> (&mut self, access: &mut WriteAccessor, key: &K, val: &V, flags: put::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Overwrites the current item referenced by the cursor.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":218306,"byte_end":218315,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":220219,"byte_end":220226,"line_start":1220,"line_end":1220,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Cursor>::reserve","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, flags: put::Flags) -> Result<&'access mut V>","parent":null,"children":[],"decl_id":null,"docs":" Reserves space for an entry with the given key and returns a pointer to\n that entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":220198,"byte_end":220207,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":222084,"byte_end":222097,"line_start":1274,"line_end":1274,"column_start":12,"column_end":25},"name":"reserve_array","qualname":"<Cursor>::reserve_array","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, count: usize, flags: put::Flags) -> Result<&'access mut [V]>","parent":null,"children":[],"decl_id":null,"docs":" Reserves space for an entry with the given key and returns a pointer to\n an array of values backing that entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":222063,"byte_end":222072,"line_start":1273,"line_end":1273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":222834,"byte_end":222849,"line_start":1297,"line_end":1297,"column_start":19,"column_end":34},"name":"reserve_unsized","qualname":"<Cursor>::reserve_unsized","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, size: usize, flags: put::Flags) -> Result<&'access mut V>","parent":null,"children":[],"decl_id":null,"docs":" Reserves space for an entry with the given key and returns a pointer to\n that entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":225017,"byte_end":225035,"line_start":1357,"line_end":1357,"column_start":12,"column_end":30},"name":"overwrite_in_place","qualname":"<Cursor>::overwrite_in_place","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, flags: put::Flags) -> Result<&'access mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a writable reference to the value belonging to the given key in\n the database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":224996,"byte_end":225005,"line_start":1356,"line_end":1356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":226738,"byte_end":226762,"line_start":1404,"line_end":1404,"column_start":12,"column_end":36},"name":"overwrite_in_place_array","qualname":"<Cursor>::overwrite_in_place_array","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, count: usize, flags: put::Flags) -> Result<&'access mut [V]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a writable reference to the array of values belonging to the\n given key in the database.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":226717,"byte_end":226726,"line_start":1403,"line_end":1403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":227447,"byte_end":227473,"line_start":1424,"line_end":1424,"column_start":19,"column_end":45},"name":"overwrite_in_place_unsized","qualname":"<Cursor>::overwrite_in_place_unsized","value":"fn <'access, K, V> (&mut self, access: &'access mut WriteAccessor, key: &K, size: usize, flags: put::Flags) -> Result<&'access mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a writable reference to the value belonging to the given key in\n the database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":229964,"byte_end":229976,"line_start":1487,"line_end":1487,"column_start":12,"column_end":24},"name":"put_multiple","qualname":"<Cursor>::put_multiple","value":"fn <K, V> (&mut self, access: &mut WriteAccessor, key: &K, values: &[V], flags: put::Flags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Stores multiple data elements with the same key in a single request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":231277,"byte_end":231280,"line_start":1526,"line_end":1526,"column_start":12,"column_end":15},"name":"del","qualname":"<Cursor>::del","value":"fn (&mut self, access: &mut WriteAccessor, flags: del::Flags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete current key/value pair.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":231256,"byte_end":231265,"line_start":1525,"line_end":1525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":231690,"byte_end":231695,"line_start":1541,"line_end":1541,"column_start":12,"column_end":17},"name":"count","qualname":"<Cursor>::count","value":"fn (&mut self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return count of duplicates for current key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":231669,"byte_end":231678,"line_start":1540,"line_end":1540,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1943},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233824,"byte_end":233829,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Owned","qualname":"::iter::MaybeOwned::Owned","value":"MaybeOwned::Owned(T)","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1946},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233838,"byte_end":233846,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::iter::MaybeOwned::Borrowed","value":"MaybeOwned::Borrowed(&'a mut T)","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1940},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233795,"byte_end":233805,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"MaybeOwned","qualname":"::iter::MaybeOwned","value":"MaybeOwned::{Owned, Borrowed}","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1946}],"decl_id":null,"docs":" A mutable value which is either owned or borrowed from an owning context.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233763,"byte_end":233785,"line_start":22,"line_end":22,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":781},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":234699,"byte_end":234709,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"CursorIter","qualname":"::iter::CursorIter","value":"CursorIter {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" An iterator over items returned by successive calls of some function on\n `Cursor` until a `NOTFOUND` error is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":236876,"byte_end":236879,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<CursorIter>::new","value":"fn <H> (mut cursor: MaybeOwned<'a, Cursor<'txn, 'db>>, access: &'access ConstAccessor<'txn>, head: H, next: fn(&mut Cursor<'txn, 'db>, &'access ConstAccessor<'txn>) -> Result<T>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor iterator from the given cursor and accessor.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21529,"byte_end":21534,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":22277,"byte_end":22282,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":22953,"byte_end":22958,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23255,"byte_end":23260,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23356,"byte_end":23361,"line_start":151,"line_end":151,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":24038,"byte_end":24044,"line_start":175,"line_end":175,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33257,"byte_end":33266,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33292,"byte_end":33301,"line_start":158,"line_end":158,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33320,"byte_end":33329,"line_start":159,"line_end":159,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33635,"byte_end":33645,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38911,"byte_end":38915,"line_start":308,"line_end":308,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39796,"byte_end":39807,"line_start":338,"line_end":338,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":65827,"byte_end":65835,"line_start":263,"line_end":263,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70826,"byte_end":70841,"line_start":407,"line_end":407,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":77839,"byte_end":77847,"line_start":577,"line_end":577,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93935,"byte_end":93937,"line_start":46,"line_end":46,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94480,"byte_end":94482,"line_start":55,"line_end":55,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94644,"byte_end":94647,"line_start":59,"line_end":59,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94809,"byte_end":94812,"line_start":63,"line_end":63,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":96705,"byte_end":96707,"line_start":113,"line_end":113,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97047,"byte_end":97050,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97390,"byte_end":97392,"line_start":133,"line_end":133,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97733,"byte_end":97736,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":99188,"byte_end":99190,"line_start":179,"line_end":179,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":99459,"byte_end":99462,"line_start":186,"line_end":186,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108995,"byte_end":108996,"line_start":404,"line_end":404,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111711,"byte_end":111712,"line_start":471,"line_end":471,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114378,"byte_end":114386,"line_start":590,"line_end":590,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114551,"byte_end":114559,"line_start":595,"line_end":595,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114694,"byte_end":114695,"line_start":601,"line_end":601,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114911,"byte_end":114912,"line_start":610,"line_end":610,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":115952,"byte_end":115953,"line_start":639,"line_end":639,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":117951,"byte_end":117955,"line_start":700,"line_end":700,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118137,"byte_end":118141,"line_start":707,"line_end":707,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118449,"byte_end":118453,"line_start":716,"line_end":716,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118910,"byte_end":118913,"line_start":737,"line_end":737,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":119057,"byte_end":119063,"line_start":745,"line_end":745,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121169,"byte_end":121178,"line_start":45,"line_end":45,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121287,"byte_end":121296,"line_start":51,"line_end":51,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121353,"byte_end":121362,"line_start":53,"line_end":53,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121540,"byte_end":121549,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121711,"byte_end":121720,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123511,"byte_end":123520,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123691,"byte_end":123700,"line_start":132,"line_end":132,"column_start":52,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123792,"byte_end":123801,"line_start":134,"line_end":134,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":124457,"byte_end":124466,"line_start":156,"line_end":156,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":124643,"byte_end":124652,"line_start":163,"line_end":163,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":137373,"byte_end":137381,"line_start":251,"line_end":251,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":137581,"byte_end":137589,"line_start":262,"line_end":262,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":144371,"byte_end":144384,"line_start":455,"line_end":455,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":146459,"byte_end":146475,"line_start":505,"line_end":505,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151324,"byte_end":151339,"line_start":650,"line_end":650,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151489,"byte_end":151504,"line_start":658,"line_end":658,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151614,"byte_end":151629,"line_start":664,"line_end":664,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158385,"byte_end":158401,"line_start":834,"line_end":834,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158674,"byte_end":158690,"line_start":843,"line_end":843,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158841,"byte_end":158857,"line_start":852,"line_end":852,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158967,"byte_end":158983,"line_start":858,"line_end":858,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":163241,"byte_end":163254,"line_start":972,"line_end":972,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":164859,"byte_end":164872,"line_start":1018,"line_end":1018,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":165003,"byte_end":165016,"line_start":1026,"line_end":1026,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":176574,"byte_end":176586,"line_start":27,"line_end":27,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184380,"byte_end":184386,"line_start":257,"line_end":257,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":1895},{"krate":0,"index":1899},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":1902},{"krate":0,"index":710},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1920},{"krate":0,"index":1924},{"krate":0,"index":1928},{"krate":0,"index":1932},{"krate":0,"index":1936},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233889,"byte_end":233899,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":234120,"byte_end":234130,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":235016,"byte_end":235026,"line_start":64,"line_end":64,"column_start":1,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":237547,"byte_end":237557,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14789,"byte_end":14794,"line_start":326,"line_end":326,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/lib.rs","byte_start":14985,"byte_end":14991,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":250}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":21529,"byte_end":21534,"line_start":94,"line_end":94,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":22277,"byte_end":22282,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":22953,"byte_end":22958,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23255,"byte_end":23260,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":23356,"byte_end":23361,"line_start":151,"line_end":151,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/error.rs","byte_start":24038,"byte_end":24044,"line_start":175,"line_end":175,"column_start":27,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":105}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33257,"byte_end":33266,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":1446}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33292,"byte_end":33301,"line_start":158,"line_end":158,"column_start":22,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":1437}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33320,"byte_end":33329,"line_start":159,"line_end":159,"column_start":15,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":33635,"byte_end":33645,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":38911,"byte_end":38915,"line_start":308,"line_end":308,"column_start":30,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1066},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/env.rs","byte_start":39796,"byte_end":39807,"line_start":338,"line_end":338,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":65827,"byte_end":65835,"line_start":263,"line_end":263,"column_start":19,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":70826,"byte_end":70841,"line_start":407,"line_end":407,"column_start":6,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/dbi.rs","byte_start":77839,"byte_end":77847,"line_start":577,"line_end":577,"column_start":10,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":93935,"byte_end":93937,"line_start":46,"line_end":46,"column_start":20,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94480,"byte_end":94482,"line_start":55,"line_end":55,"column_start":20,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94644,"byte_end":94647,"line_start":59,"line_end":59,"column_start":20,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":94809,"byte_end":94812,"line_start":63,"line_end":63,"column_start":20,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":273}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":96705,"byte_end":96707,"line_start":113,"line_end":113,"column_start":35,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97047,"byte_end":97050,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97390,"byte_end":97392,"line_start":133,"line_end":133,"column_start":35,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":97733,"byte_end":97736,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":292}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":99188,"byte_end":99190,"line_start":179,"line_end":179,"column_start":34,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":2585},"to":{"krate":0,"index":335}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":99459,"byte_end":99462,"line_start":186,"line_end":186,"column_start":34,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":2337},"to":{"krate":0,"index":335}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":107708,"byte_end":107712,"line_start":370,"line_end":370,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1445},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":107715,"byte_end":107720,"line_start":370,"line_end":370,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108743,"byte_end":108747,"line_start":395,"line_end":395,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1445},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108750,"byte_end":108755,"line_start":395,"line_end":395,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":108995,"byte_end":108996,"line_start":404,"line_end":404,"column_start":49,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":363},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":109348,"byte_end":109361,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":354},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":109364,"byte_end":109367,"line_start":417,"line_end":417,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1960},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111433,"byte_end":111451,"line_start":464,"line_end":464,"column_start":42,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111454,"byte_end":111457,"line_start":464,"line_end":464,"column_start":63,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":1960},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":111711,"byte_end":111712,"line_start":471,"line_end":471,"column_start":65,"column_end":66},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114378,"byte_end":114386,"line_start":590,"line_end":590,"column_start":59,"column_end":67},"kind":{"Impl":{"id":31}},"from":{"krate":2,"index":10154},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114551,"byte_end":114559,"line_start":595,"line_end":595,"column_start":65,"column_end":73},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":10154},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114694,"byte_end":114695,"line_start":601,"line_end":601,"column_start":35,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":114911,"byte_end":114912,"line_start":610,"line_end":610,"column_start":36,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":115952,"byte_end":115953,"line_start":639,"line_end":639,"column_start":45,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":356}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":117951,"byte_end":117955,"line_start":700,"line_end":700,"column_start":22,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":6136},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118137,"byte_end":118141,"line_start":707,"line_end":707,"column_start":24,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":1,"index":6136},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118449,"byte_end":118453,"line_start":716,"line_end":716,"column_start":28,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":6136},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":118910,"byte_end":118913,"line_start":737,"line_end":737,"column_start":35,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/traits.rs","byte_start":119057,"byte_end":119063,"line_start":745,"line_end":745,"column_start":24,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":354}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121169,"byte_end":121178,"line_start":45,"line_end":45,"column_start":40,"column_end":49},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121287,"byte_end":121296,"line_start":51,"line_end":51,"column_start":39,"column_end":48},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1445}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121353,"byte_end":121362,"line_start":53,"line_end":53,"column_start":49,"column_end":58},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121540,"byte_end":121549,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":121711,"byte_end":121720,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123511,"byte_end":123520,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123691,"byte_end":123700,"line_start":132,"line_end":132,"column_start":52,"column_end":61},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1940}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":123792,"byte_end":123801,"line_start":134,"line_end":134,"column_start":35,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":124457,"byte_end":124466,"line_start":156,"line_end":156,"column_start":54,"column_end":63},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/unaligned.rs","byte_start":124643,"byte_end":124652,"line_start":163,"line_end":163,"column_start":46,"column_end":55},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6481}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":137373,"byte_end":137381,"line_start":251,"line_end":251,"column_start":15,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":137581,"byte_end":137589,"line_start":262,"line_end":262,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":144371,"byte_end":144384,"line_start":455,"line_end":455,"column_start":21,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1857},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":146459,"byte_end":146475,"line_start":505,"line_end":505,"column_start":12,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151324,"byte_end":151339,"line_start":650,"line_end":650,"column_start":22,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151489,"byte_end":151504,"line_start":658,"line_end":658,"column_start":25,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":151614,"byte_end":151629,"line_start":664,"line_end":664,"column_start":12,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158385,"byte_end":158401,"line_start":834,"line_end":834,"column_start":12,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158674,"byte_end":158690,"line_start":843,"line_end":843,"column_start":22,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158841,"byte_end":158857,"line_start":852,"line_end":852,"column_start":25,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":158967,"byte_end":158983,"line_start":858,"line_end":858,"column_start":12,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":163241,"byte_end":163254,"line_start":972,"line_end":972,"column_start":12,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":164859,"byte_end":164872,"line_start":1018,"line_end":1018,"column_start":22,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1864},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/tx.rs","byte_start":165003,"byte_end":165016,"line_start":1026,"line_end":1026,"column_start":12,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":176574,"byte_end":176586,"line_start":27,"line_end":27,"column_start":15,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/cursor.rs","byte_start":184380,"byte_end":184386,"line_start":257,"line_end":257,"column_start":16,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":233889,"byte_end":233899,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":234120,"byte_end":234130,"line_start":39,"line_end":39,"column_start":31,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":235016,"byte_end":235026,"line_start":64,"line_end":64,"column_start":1,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rajkishor/.cargo/registry/src/github.com-1ecc6299db9ec823/lmdb-zero-0.4.4/src/iter.rs","byte_start":237547,"byte_end":237557,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":3202}}]}